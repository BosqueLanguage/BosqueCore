(set-logic ALL)

;;
;; Type Tags
;;

(declare-datatypes (
      (TypeTag 0)
    ) (
    ( 
      (TypeTag_$Invalid)
      (TypeTag_BigInt)
      (TypeTag_BigNat)
      (TypeTag_Bool)
      (TypeTag_BufferCompression)
      (TypeTag_BufferFormat)
      (TypeTag_ByteBuffer)
      (TypeTag_CalendarDate)
      (TypeTag_DateTime)
      (TypeTag_Decimal)
      (TypeTag_Float)
      (TypeTag_HavocSequence)
      (TypeTag_ISOTimeStamp)
      (TypeTag_Int)
      (TypeTag_LatLongCoordinate)
      (TypeTag_ListOps)
      (TypeTag_List_Main..Light_)
      (TypeTag_List_Main..SceneObject_)
      (TypeTag_LogicalTime)
      (TypeTag_Main..Camera)
      (TypeTag_Main..Color)
      (TypeTag_Main..ISect)
      (TypeTag_Main..Light)
      (TypeTag_Main..Plane)
      (TypeTag_Main..Ray)
      (TypeTag_Main..RayTracer)
      (TypeTag_Main..Scene)
      (TypeTag_Main..Sphere)
      (TypeTag_Main..Surface)
      (TypeTag_Main..Vector)
      (TypeTag_Nat)
      (TypeTag_None)
      (TypeTag_Nothing)
      (TypeTag_NumericOps)
      (TypeTag_Rational)
      (TypeTag_Regex)
      (TypeTag_RelativeTime)
      (TypeTag_SHAContentHash)
      (TypeTag_SeqListOps)
      (TypeTag_SeqList_Main..Light_)
      (TypeTag_SeqList_Main..SceneObject_)
      (TypeTag_ShaContentHash)
      (TypeTag_String)
      (TypeTag_TickTime)
      (TypeTag_UTCDateTime)
      (TypeTag_UUID4)
      (TypeTag_UUID7)
      (TypeTag_Vector1_Main..Light_)
      (TypeTag_Vector1_Main..SceneObject_)
      (TypeTag_Vector2_Main..Light_)
      (TypeTag_Vector2_Main..SceneObject_)
      (TypeTag_Vector3_Main..Light_)
      (TypeTag_Vector3_Main..SceneObject_)
      (TypeTag_Vector4_Main..Light_)
      (TypeTag_Vector4_Main..SceneObject_)
      (TypeTag_VectorOps)
    )
))

(declare-fun TypeTag_OrdinalOf (TypeTag) Int)
(assert (= (TypeTag_OrdinalOf TypeTag_BigInt) 0))
(assert (= (TypeTag_OrdinalOf TypeTag_BigNat) 1))
(assert (= (TypeTag_OrdinalOf TypeTag_Bool) 2))
(assert (= (TypeTag_OrdinalOf TypeTag_BufferCompression) 3))
(assert (= (TypeTag_OrdinalOf TypeTag_BufferFormat) 4))
(assert (= (TypeTag_OrdinalOf TypeTag_CalendarDate) 5))
(assert (= (TypeTag_OrdinalOf TypeTag_ISOTimeStamp) 6))
(assert (= (TypeTag_OrdinalOf TypeTag_Int) 7))
(assert (= (TypeTag_OrdinalOf TypeTag_LogicalTime) 8))
(assert (= (TypeTag_OrdinalOf TypeTag_Nat) 9))
(assert (= (TypeTag_OrdinalOf TypeTag_None) 10))
(assert (= (TypeTag_OrdinalOf TypeTag_RelativeTime) 11))
(assert (= (TypeTag_OrdinalOf TypeTag_SHAContentHash) 12))
(assert (= (TypeTag_OrdinalOf TypeTag_ShaContentHash) 13))
(assert (= (TypeTag_OrdinalOf TypeTag_String) 14))
(assert (= (TypeTag_OrdinalOf TypeTag_TickTime) 15))
(assert (= (TypeTag_OrdinalOf TypeTag_UTCDateTime) 16))
(assert (= (TypeTag_OrdinalOf TypeTag_UUID4) 17))
(assert (= (TypeTag_OrdinalOf TypeTag_UUID7) 18))

(declare-datatypes (
      (AbstractTypeTag 0)
    ) (
    ( 
      (AbstractTypeTag_$Invalid)
      ;;NO DATA;;
    )
))

(declare-datatypes (
      (TupleIndexTag 0)
    ) (
    ( 
      (TupleIndexTag_$Invalid)
      ;;NO DATA;;
    )
))

(declare-datatypes (
      (RecordPropertyTag 0)
    ) (
    ( 
      (RecordPropertyTag_$Invalid)
      ;;NO DATA;;
    )
))

(declare-fun SubtypeOf@ (TypeTag AbstractTypeTag) Bool)
;;NO DATA;;

(declare-fun HasIndex@ (TypeTag TupleIndexTag) Bool)
;;NO DATA;;

(declare-fun HasProperty@ (TypeTag RecordPropertyTag) Bool)
;;NO DATA;;

(declare-const Real@zero Real)
(assert (= Real@zero 0.0))

(declare-const Real@one Real)
(assert (= Real@one 1.0))

(define-sort BInt () Int)
(define-sort BNat () Int)
(define-sort BBigInt () Int)
(define-sort BBigNat () Int)
(define-sort BFloat () Real)
(define-sort BDecimal () Real)
(define-sort BRational () Real)
(define-sort BString () String)
(define-sort BTickTime () Int)
(define-sort BLogicalTime () Int)
(define-sort BUUID4 () String)
(define-sort BUUID7 () String)
(define-sort BSHAContentHash () Int)

;;TODO Hash + HashInvert and axioms

(declare-datatype BByteBuffer 
  (
    (BByteBuffer@cons (BByteBuffer@bytes (Seq (_ BitVec 8))) (BByteBuffer@format BNat) (BByteBuffer@compress BNat))
  )
)

(declare-datatype BDateTime 
  (
    (BDateTime@cons (BDateTime@year BNat) (BDateTime@month BNat) (BDateTime@day BNat) (BDateTime@hour BNat) (BDateTime@min BNat) (BDateTime@tzdata BString))
  )
)

(declare-datatype BUTCDateTime 
  (
    (BUTCDateTime@cons (BUTCDateTime@year BNat) (BUTCDateTime@month BNat) (BUTCDateTime@day BNat) (BUTCDateTime@hour BNat) (BUTCDateTime@min BNat))
  )
)

(declare-datatype BCalendarDate 
  (
    (BCalendarDate@cons (BCalendarDate@year BNat) (BCalendarDate@month BNat) (BCalendarDate@day BNat))
  )
)

(declare-datatype BRelativeTime 
  (
    (BRelativeTime@cons (BRelativeTime@hour BNat) (BRelativeTime@min BNat))
  )
)

(declare-datatype BISOTimeStamp 
  (
    (BISOTimeStamp@cons (BISOTimeStamp@year BNat) (BISOTimeStamp@month BNat) (BISOTimeStamp@day BNat) (BISOTimeStamp@hour BNat) (BISOTimeStamp@min BNat) (BISOTimeStamp@sec BNat) (BISOTimeStamp@millis BNat))
  )
)

(declare-datatype BLatLongCoordinate 
  (
    (BLatLongCoordinate@cons (BLatLongCoordinate@lat Real) (BLatLongCoordinate@long Real))
  )
)

(declare-const BInt@zero BInt) (assert (= BInt@zero 0))
(declare-const BInt@one BInt) (assert (= BInt@one 1))

(declare-const BNat@zero BNat) (assert (= BNat@zero 0))
(declare-const BNat@one BNat) (assert (= BNat@one 1))

(declare-const BBigInt@zero BBigInt) (assert (= BBigInt@zero 0))
(declare-const BBigInt@one BBigInt) (assert (= BBigInt@one 1))

(declare-const BBigNat@zero BBigNat) (assert (= BBigNat@zero 0))
(declare-const BBigNat@one BBigNat) (assert (= BBigNat@one 1))

(declare-const BFloat@zero BFloat) (assert (= BFloat@zero Real@zero))
(declare-const BFloat@one BFloat) (assert (= BFloat@one Real@one))

(declare-const BDecimal@zero BDecimal) (assert (= BDecimal@zero Real@zero))
(declare-const BDecimal@one BDecimal) (assert (= BDecimal@one Real@one))

(declare-const BRational@zero BRational) (assert (= BRational@zero Real@zero))
(declare-const BRational@one BRational) (assert (= BRational@one Real@one))

(define-sort HavocSequence () (Seq Int))

;;
;; Primitive datatypes 
;;
(declare-datatypes (
      (bsq_none 0)
      (bsq_nothing 0)
      ; Bool -> Bool
      ; Int -> Int
      ; Nat -> Int
      ; BigInt -> Int
      ; BigNat -> Int
      ; Float -> Real 
      ; Decimal -> Real
      ; Rational -> Real
      ; String -> String | (Seq (_ BitVec 8))
      ; ByteBuffer -> BByteBuffer
      ; DateTime -> BDateTime
      ; UTCDateTime -> BUTCDateTime
      ; CalendarDate -> BCalendarDate
      ; RelativeTime -> BRelativeTime
      ; TickTime -> Int
      ; LogicalTime -> Int
      ; ISOTimeStamp -> BISOTimeStamp
      ; UUID4 -> BUUID4
      ; UUID7 -> BUUID7
      ; SHAContentHash -> (_ BitVec 16)
      ; LatLongCoordinate -> BLatLongCoordinate
    ) (
      ( (bsq_none@literal) ) 
      ( (bsq_nothing@literal) )
))

(define-sort BufferCompression () BNat)
(define-sort BufferFormat () BNat)

;;
;; KeyType Concept datatypes
;;
(declare-datatypes (
      (bsq_keyobject 0)
      (BKey 0)
    ) (
    (
      (bsqkey_none@literal)
      (bsqkey_bool@box (bsqkey_bool_value Bool))
      (bsqkey_int@box (bsqkey_int_value BInt))
      (bsqkey_nat@box (bsqkey_nat_value BNat))
      (bsqkey_bigint@box (bsqkey_bigint_value BBigInt))
      (bsqkey_bignat@box (bsqkey_bignat_value BBigNat))
      (bsqkey_string@box (bsqkey_string_value BString))
      (bsqkey_utcdatetime@box (bsqkey_utcdatetime_value BUTCDateTime))
      (bsqkey_calendardate@box (bsqkey_calendardate_value BCalendarDate))
      (bsqkey_relativetime@box (bsqkey_relativetime_value BRelativeTime))
      (bsqkey_ticktime@box (bsqkey_ticktime_value BTickTime))
      (bsqkey_logicaltime@box (bsqkey_logicaltime_value BLogicalTime))
      (bsqkey_isotimestamp@box (bsqkey_isotimestamp_value BISOTimeStamp))
      (bsqkey_uuid4@box (bsqkey_uuid4_value BUUID4))
      (bsqkey_uuid7@box (bsqkey_uuid7_value BUUID7))
      (bsqkey_shacontenthash@box (bsqkey_shacontenthash_value BSHAContentHash))
      (BufferCompression@box (bsqkey_BufferCompression_value BufferCompression))
      (BufferFormat@box (bsqkey_BufferFormat_value BufferFormat))
    )
    ( (BKey@box (BKey_type TypeTag) (BKey_oftype TypeTag) (BKey_value bsq_keyobject)) )
))

(declare-const BKey@none BKey)
(assert (= BKey@none (BKey@box TypeTag_None TypeTag_None bsqkey_none@literal)))

(define-fun bsq_none@less ((k1 bsq_none) (k2 bsq_none)) Bool
  false
)

(define-fun Bool@less ((k1 Bool) (k2 Bool)) Bool
  (and (not k1) k2)
)

(define-fun BInt@less ((k1 BInt) (k2 BInt)) Bool
  (< k1 k2)
)

(define-fun BNat@less ((k1 BNat) (k2 BNat)) Bool
  (< k1 k2)
)

(define-fun BBigInt@less ((k1 BBigInt) (k2 BBigInt)) Bool
  (< k1 k2)
)

(define-fun BBigNat@less ((k1 BBigNat) (k2 BBigNat)) Bool
  (< k1 k2)
)

(define-fun BString@less ((k1 BString) (k2 BString)) Bool
  (str.< k1 k2)
)

(define-fun BUTCDateTime@less ((k1 BUTCDateTime) (k2 BUTCDateTime)) Bool
  (ite (not (= (BUTCDateTime@year k1) (BUTCDateTime@year k2)))
    (< (BUTCDateTime@year k1) (BUTCDateTime@year k2))
    (ite (not (= (BUTCDateTime@month k1) (BUTCDateTime@month k2)))
      (< (BUTCDateTime@month k1) (BUTCDateTime@month k2))
      (ite (not (= (BUTCDateTime@day k1) (BUTCDateTime@day k2)))
        (< (BUTCDateTime@day k1) (BUTCDateTime@day k2))
        (ite (not (= (BUTCDateTime@hour k1) (BUTCDateTime@hour k2)))
          (< (BUTCDateTime@hour k1) (BUTCDateTime@hour k2))
          (< (BUTCDateTime@min k1) (BUTCDateTime@min k2))
        )
      )
    )
  )
)

(define-fun BCalendarDate@less ((k1 BCalendarDate) (k2 BCalendarDate)) Bool
  (ite (not (= (BCalendarDate@year k1) (BCalendarDate@year k2)))
    (< (BCalendarDate@year k1) (BCalendarDate@year k2))
    (ite (not (= (BCalendarDate@month k1) (BCalendarDate@month k2)))
      (< (BCalendarDate@month k1) (BCalendarDate@month k2))
      (< (BCalendarDate@day k1) (BCalendarDate@day k2))
    )
  )
)

(define-fun BRelativeTime@less ((k1 BRelativeTime) (k2 BRelativeTime)) Bool
  (ite (not (= (BRelativeTime@hour k1) (BRelativeTime@hour k2)))
    (< (BRelativeTime@hour k1) (BRelativeTime@hour k2))
    (< (BRelativeTime@min k1) (BRelativeTime@min k2))
  )
)

(define-fun BTickTime@less ((k1 BTickTime) (k2 BTickTime)) Bool
  (< k1 k2)
)

(define-fun BLogicalTime@less ((k1 BLogicalTime) (k2 BLogicalTime)) Bool
  (< k1 k2)
)

(define-fun BISOTimeStamp@less ((k1 BISOTimeStamp) (k2 BISOTimeStamp)) Bool
  (ite (not (= (BISOTimeStamp@year k1) (BISOTimeStamp@year k2)))
    (< (BISOTimeStamp@year k1) (BISOTimeStamp@year k2))
    (ite (not (= (BISOTimeStamp@month k1) (BISOTimeStamp@month k2)))
      (< (BISOTimeStamp@month k1) (BISOTimeStamp@month k2))
      (ite (not (= (BISOTimeStamp@day k1) (BISOTimeStamp@day k2)))
        (< (BISOTimeStamp@day k1) (BISOTimeStamp@day k2))
        (ite (not (= (BISOTimeStamp@hour k1) (BISOTimeStamp@hour k2)))
          (< (BISOTimeStamp@hour k1) (BISOTimeStamp@hour k2))
          (ite (not (= (BISOTimeStamp@min k1) (BISOTimeStamp@min k2)))
            (< (BISOTimeStamp@min k1) (BISOTimeStamp@min k2))
            (ite (not (= (BISOTimeStamp@sec k1) (BISOTimeStamp@sec k2)))
              (< (BISOTimeStamp@sec k1) (BISOTimeStamp@sec k2))
              (< (BISOTimeStamp@millis k1) (BISOTimeStamp@millis k2))
            )
          )
        )
      )
    )
  )
)

(define-fun BUUID4@less ((k1 BUUID4) (k2 BUUID4)) Bool
  (str.< k1 k2)
)

(define-fun BUUID7@less ((k1 BUUID7) (k2 BUUID7)) Bool
  (str.< k1 k2)
)

(define-fun BSHAContentHash@less ((k1 BSHAContentHash) (k2 BSHAContentHash)) Bool
  (< k1 k2)
)

(define-fun BKey@less ((k1 BKey) (k2 BKey)) Bool
  (let ((tt (BKey_oftype k1)) (ttv1 (TypeTag_OrdinalOf (BKey_type k1))) (ttv2 (TypeTag_OrdinalOf (BKey_type k2))))
    (ite (not (= ttv1 ttv2))
      (< ttv1 ttv2)
      (let ((vv1 (BKey_value k1)) (vv2 (BKey_value k2)))
        (ite (= tt TypeTag_None)
          false
          (ite (= tt TypeTag_Bool)
            (Bool@less (bsqkey_bool_value vv1) (bsqkey_bool_value vv2))
            (ite (= tt TypeTag_Int) 
              (BInt@less (bsqkey_int_value vv1) (bsqkey_int_value vv2))
              (ite (= tt TypeTag_Nat) 
                (BNat@less (bsqkey_nat_value vv1) (bsqkey_nat_value vv2))
                (ite (= tt TypeTag_BigInt)
                  (BBigInt@less (bsqkey_bigint_value vv1) (bsqkey_bigint_value vv2))
                  (ite (= tt TypeTag_BigNat)
                    (BBigNat@less (bsqkey_bignat_value vv1) (bsqkey_bignat_value vv2))
                    (ite (= tt TypeTag_String)
                      (BString@less (bsqkey_string_value vv1) (bsqkey_string_value vv2))
                      (ite (= tt TypeTag_UTCDateTime)
                        (BUTCDateTime@less (bsqkey_utcdatetime_value vv1) (bsqkey_utcdatetime_value vv2)) 
                        (ite (= tt TypeTag_CalendarDate)
                          (BCalendarDate@less (bsqkey_calendardate_value vv1) (bsqkey_calendardate_value vv2))
                          (ite (= tt TypeTag_RelativeTime)
                            (BRelativeTime@less (bsqkey_relativetime_value vv1) (bsqkey_relativetime_value vv2))
                            (ite (= tt TypeTag_TickTime)
                              (BTickTime@less (bsqkey_ticktime_value vv1) (bsqkey_ticktime_value vv2))
                              (ite (= tt TypeTag_LogicalTime)
                                (BLogicalTime@less (bsqkey_logicaltime_value vv1) (bsqkey_logicaltime_value vv2))
                                (ite (= tt TypeTag_ISOTimeStamp)
                                  (BISOTimeStamp@less (bsqkey_isotimestamp_value vv1) (bsqkey_isotimestamp_value vv2))
                                  (ite (= tt TypeTag_UUID4)
                                    (BUUID4@less (bsqkey_uuid4_value vv1) (bsqkey_uuid4_value vv2))
                                    (ite (= tt TypeTag_UUID7)
                                      (BUUID7@less (bsqkey_uuid7_value vv1) (bsqkey_uuid7_value vv2))
                                      (BSHAContentHash@less (bsqkey_shacontenthash_value vv1) (bsqkey_shacontenthash_value vv2))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

;;
;; Any Concept datatypes
;;
(declare-datatypes (
    (bsq_regex 0)
    ;;NO DATA;;
    ;;NO DATA;;
    (ListOps 0)
    (Main..Camera 0)
    (Main..Color 0)
    (Main..ISect 0)
    (Main..Light 0)
    (Main..Plane 0)
    (Main..Ray 0)
    (Main..RayTracer 0)
    (Main..Scene 0)
    (Main..Sphere 0)
    (Main..Surface 0)
    (Main..Vector 0)
    (NumericOps 0)
    (SeqListOps 0)
    (Vector1_Main..Light_ 0)
    (Vector1_Main..SceneObject_ 0)
    (Vector2_Main..Light_ 0)
    (Vector2_Main..SceneObject_ 0)
    (Vector3_Main..Light_ 0)
    (Vector3_Main..SceneObject_ 0)
    (Vector4_Main..Light_ 0)
    (Vector4_Main..SceneObject_ 0)
    (VectorOps 0)
    (SeqList_Main..Light_ 0)
    (SeqList_Main..SceneObject_ 0)
    (bsq_object 0)
    (BTerm 0)
    ) (
    ( (bsq_regex@cons (bsq_regex_value Int)) )
    ;;NO DATA;;
    ;;NO DATA;;
    ( (ListOps@cons ) )
    ( (Main..Camera@cons (Main..Camera@_pos Main..Vector) (Main..Camera@_forward Main..Vector) (Main..Camera@_up Main..Vector) (Main..Camera@_right Main..Vector)) )
    ( (Main..Color@cons (Main..Color@_red BFloat) (Main..Color@_green BFloat) (Main..Color@_blue BFloat)) )
    ( (Main..ISect@cons (Main..ISect@_thing BTerm) (Main..ISect@_ray Main..Ray) (Main..ISect@_dist BFloat)) )
    ( (Main..Light@cons (Main..Light@_pos Main..Vector) (Main..Light@_color Main..Color)) )
    ( (Main..Plane@cons (Main..Plane@_surface Main..Surface) (Main..Plane@_id BNat) (Main..Plane@_norm Main..Vector) (Main..Plane@_offset BFloat)) )
    ( (Main..Ray@cons (Main..Ray@_start Main..Vector) (Main..Ray@_dir Main..Vector)) )
    ( (Main..RayTracer@cons (Main..RayTracer@_screenWidth BNat) (Main..RayTracer@_screenHeight BNat)) )
    ( (Main..Scene@cons (Main..Scene@_things BTerm) (Main..Scene@_lights BTerm) (Main..Scene@_camera Main..Camera)) )
    ( (Main..Sphere@cons (Main..Sphere@_surface Main..Surface) (Main..Sphere@_id BNat) (Main..Sphere@_center Main..Vector) (Main..Sphere@_radius BFloat)) )
    ( (Main..Surface@cons (Main..Surface@_diffuse Main..Color) (Main..Surface@_specular Main..Color) (Main..Surface@_reflect BFloat) (Main..Surface@_roughness BFloat)) )
    ( (Main..Vector@cons (Main..Vector@_x BFloat) (Main..Vector@_y BFloat) (Main..Vector@_z BFloat)) )
    ( (NumericOps@cons ) )
    ( (SeqListOps@cons ) )
    ( (Vector1_Main..Light_@cons (Vector1_Main..Light_@_v0 Main..Light)) )
    ( (Vector1_Main..SceneObject_@cons (Vector1_Main..SceneObject_@_v0 BTerm)) )
    ( (Vector2_Main..Light_@cons (Vector2_Main..Light_@_v0 Main..Light) (Vector2_Main..Light_@_v1 Main..Light)) )
    ( (Vector2_Main..SceneObject_@cons (Vector2_Main..SceneObject_@_v0 BTerm) (Vector2_Main..SceneObject_@_v1 BTerm)) )
    ( (Vector3_Main..Light_@cons (Vector3_Main..Light_@_v0 Main..Light) (Vector3_Main..Light_@_v1 Main..Light) (Vector3_Main..Light_@_v2 Main..Light)) )
    ( (Vector3_Main..SceneObject_@cons (Vector3_Main..SceneObject_@_v0 BTerm) (Vector3_Main..SceneObject_@_v1 BTerm) (Vector3_Main..SceneObject_@_v2 BTerm)) )
    ( (Vector4_Main..Light_@cons (Vector4_Main..Light_@_v0 Main..Light) (Vector4_Main..Light_@_v1 Main..Light) (Vector4_Main..Light_@_v2 Main..Light) (Vector4_Main..Light_@_v3 Main..Light)) )
    ( (Vector4_Main..SceneObject_@cons (Vector4_Main..SceneObject_@_v0 BTerm) (Vector4_Main..SceneObject_@_v1 BTerm) (Vector4_Main..SceneObject_@_v2 BTerm) (Vector4_Main..SceneObject_@_v3 BTerm)) )
    ( (VectorOps@cons ) )
    ( (SeqList_Main..Light_@cons (SeqList_Main..Light__seq (Seq Main..Light))) )
    ( (SeqList_Main..SceneObject_@cons (SeqList_Main..SceneObject__seq (Seq BTerm))) )
    (
      (bsqobject_nothing@literal)
      (bsqobject_float@box (bsqobject_float_value BFloat))
      (bsqobject_decimal@box (bsqobject_decimal_value BDecimal))
      (bsqobject_rational@box (bsqobject_rational_value BRational))
      (bsqobject_bytebuffer@box (bsqobject_bytebuffer_value BByteBuffer))
      (bsqobject_datetime@box (bsqobject_datetime_value BDateTime))
      (bsqobject_regex@box (bsqobject_regex_value bsq_regex))
      ;;NO DATA;;
      ;;NO DATA;;
      (ListOps@box (bsqobject_ListOps_value ListOps))
      (Main..Camera@box (bsqobject_Main..Camera_value Main..Camera))
      (Main..Color@box (bsqobject_Main..Color_value Main..Color))
      (Main..ISect@box (bsqobject_Main..ISect_value Main..ISect))
      (Main..Light@box (bsqobject_Main..Light_value Main..Light))
      (Main..Plane@box (bsqobject_Main..Plane_value Main..Plane))
      (Main..Ray@box (bsqobject_Main..Ray_value Main..Ray))
      (Main..RayTracer@box (bsqobject_Main..RayTracer_value Main..RayTracer))
      (Main..Scene@box (bsqobject_Main..Scene_value Main..Scene))
      (Main..Sphere@box (bsqobject_Main..Sphere_value Main..Sphere))
      (Main..Surface@box (bsqobject_Main..Surface_value Main..Surface))
      (Main..Vector@box (bsqobject_Main..Vector_value Main..Vector))
      (NumericOps@box (bsqobject_NumericOps_value NumericOps))
      (SeqListOps@box (bsqobject_SeqListOps_value SeqListOps))
      (Vector1_Main..Light_@box (bsqobject_Vector1_Main..Light__value Vector1_Main..Light_))
      (Vector1_Main..SceneObject_@box (bsqobject_Vector1_Main..SceneObject__value Vector1_Main..SceneObject_))
      (Vector2_Main..Light_@box (bsqobject_Vector2_Main..Light__value Vector2_Main..Light_))
      (Vector2_Main..SceneObject_@box (bsqobject_Vector2_Main..SceneObject__value Vector2_Main..SceneObject_))
      (Vector3_Main..Light_@box (bsqobject_Vector3_Main..Light__value Vector3_Main..Light_))
      (Vector3_Main..SceneObject_@box (bsqobject_Vector3_Main..SceneObject__value Vector3_Main..SceneObject_))
      (Vector4_Main..Light_@box (bsqobject_Vector4_Main..Light__value Vector4_Main..Light_))
      (Vector4_Main..SceneObject_@box (bsqobject_Vector4_Main..SceneObject__value Vector4_Main..SceneObject_))
      (VectorOps@box (bsqobject_VectorOps_value VectorOps))
      (List_Main..Light_@box (bsqobject_List_Main..Light__value BTerm))
      (List_Main..SceneObject_@box (bsqobject_List_Main..SceneObject__value BTerm))
      (SeqList_Main..Light_@box (bsqobject_SeqList_Main..Light__value SeqList_Main..Light_))
      (SeqList_Main..SceneObject_@box (bsqobject_SeqList_Main..SceneObject__value SeqList_Main..SceneObject_))
    )
    ( 
      (BTerm@termbox (BTerm_termtype TypeTag) (BTerm_termvalue bsq_object))
      (BTerm@keybox (BTerm_keyvalue BKey)) 
    )
))

(declare-const BTerm@none BTerm)
(assert (= BTerm@none (BTerm@keybox BKey@none)))

(declare-const BTerm@nothing BTerm)
(assert (= BTerm@nothing (BTerm@termbox TypeTag_Nothing bsqobject_nothing@literal)))

(define-sort List_Main..Light_ () BTerm)
(define-sort List_Main..SceneObject_ () BTerm)

;;
;;Define utility functions
;;
(define-fun GetTypeTag@BKey ((t BKey)) TypeTag
  (BKey_type t)
)

(define-fun GetTypeTag@BTerm ((t BTerm)) TypeTag
  (ite ((_ is BTerm@termbox) t) (BTerm_termtype t) (BKey_type (BTerm_keyvalue t)))
)

;;
;; Ephemeral datatypes
;;
(declare-datatypes (
    (elistnull 0)
    ;;NO DATA;;
    ) (
    ( (elistnull@cons) )
    ;;NO DATA;;
))

(declare-datatypes (
      (ErrorID 0)
    ) (
    ( 
      (ErrorID_AssumeCheck)
      (ErrorID_Target)
    )
))

(declare-datatypes (
      ($Result_BTerm 0)
      ($Result_BBigInt 0)
      ($Result_BBigNat 0)
      ($Result_Bool 0)
      ($Result_BufferCompression 0)
      ($Result_BufferFormat 0)
      ($Result_BByteBuffer 0)
      ($Result_BCalendarDate 0)
      ($Result_BDateTime 0)
      ($Result_BDecimal 0)
      ($Result_BFloat 0)
      ($Result_HavocSequence 0)
      ($Result_BInt 0)
      ($Result_BISOTimeStamp 0)
      ($Result_BKey 0)
      ($Result_BLatLongCoordinate 0)
      ($Result_List_Main..Light_ 0)
      ($Result_List_Main..SceneObject_ 0)
      ($Result_ListOps 0)
      ($Result_BLogicalTime 0)
      ($Result_Main..Camera 0)
      ($Result_Main..Color 0)
      ($Result_Main..ISect 0)
      ($Result_Main..Light 0)
      ($Result_Main..Plane 0)
      ($Result_Main..Ray 0)
      ($Result_Main..RayTracer 0)
      ($Result_Main..Scene 0)
      ($Result_Main..Sphere 0)
      ($Result_Main..Surface 0)
      ($Result_Main..Vector 0)
      ($Result_BNat 0)
      ($Result_bsq_none 0)
      ($Result_bsq_nothing 0)
      ($Result_NumericOps 0)
      ($Result_BRational 0)
      ($Result_bsq_regex 0)
      ($Result_BRelativeTime 0)
      ($Result_SeqList_Main..Light_ 0)
      ($Result_SeqList_Main..SceneObject_ 0)
      ($Result_SeqListOps 0)
      ($Result_BSHAContentHash 0)
      ($Result_BString 0)
      ($Result_BTickTime 0)
      ($Result_BUTCDateTime 0)
      ($Result_BUUID4 0)
      ($Result_BUUID7 0)
      ($Result_Vector1_Main..Light_ 0)
      ($Result_Vector1_Main..SceneObject_ 0)
      ($Result_Vector2_Main..Light_ 0)
      ($Result_Vector2_Main..SceneObject_ 0)
      ($Result_Vector3_Main..Light_ 0)
      ($Result_Vector3_Main..SceneObject_ 0)
      ($Result_Vector4_Main..Light_ 0)
      ($Result_Vector4_Main..SceneObject_ 0)
      ($Result_VectorOps 0)
      ;;NO DATA;;
    ) (
    ( ($Result_BTerm@success ($Result_BTerm@success_value BTerm)) ($Result_BTerm@error ($Result_BTerm@error_value ErrorID)) )
    ( ($Result_BBigInt@success ($Result_BBigInt@success_value BBigInt)) ($Result_BBigInt@error ($Result_BBigInt@error_value ErrorID)) )
    ( ($Result_BBigNat@success ($Result_BBigNat@success_value BBigNat)) ($Result_BBigNat@error ($Result_BBigNat@error_value ErrorID)) )
    ( ($Result_Bool@success ($Result_Bool@success_value Bool)) ($Result_Bool@error ($Result_Bool@error_value ErrorID)) )
    ( ($Result_BufferCompression@success ($Result_BufferCompression@success_value BufferCompression)) ($Result_BufferCompression@error ($Result_BufferCompression@error_value ErrorID)) )
    ( ($Result_BufferFormat@success ($Result_BufferFormat@success_value BufferFormat)) ($Result_BufferFormat@error ($Result_BufferFormat@error_value ErrorID)) )
    ( ($Result_BByteBuffer@success ($Result_BByteBuffer@success_value BByteBuffer)) ($Result_BByteBuffer@error ($Result_BByteBuffer@error_value ErrorID)) )
    ( ($Result_BCalendarDate@success ($Result_BCalendarDate@success_value BCalendarDate)) ($Result_BCalendarDate@error ($Result_BCalendarDate@error_value ErrorID)) )
    ( ($Result_BDateTime@success ($Result_BDateTime@success_value BDateTime)) ($Result_BDateTime@error ($Result_BDateTime@error_value ErrorID)) )
    ( ($Result_BDecimal@success ($Result_BDecimal@success_value BDecimal)) ($Result_BDecimal@error ($Result_BDecimal@error_value ErrorID)) )
    ( ($Result_BFloat@success ($Result_BFloat@success_value BFloat)) ($Result_BFloat@error ($Result_BFloat@error_value ErrorID)) )
    ( ($Result_HavocSequence@success ($Result_HavocSequence@success_value HavocSequence)) ($Result_HavocSequence@error ($Result_HavocSequence@error_value ErrorID)) )
    ( ($Result_BInt@success ($Result_BInt@success_value BInt)) ($Result_BInt@error ($Result_BInt@error_value ErrorID)) )
    ( ($Result_BISOTimeStamp@success ($Result_BISOTimeStamp@success_value BISOTimeStamp)) ($Result_BISOTimeStamp@error ($Result_BISOTimeStamp@error_value ErrorID)) )
    ( ($Result_BKey@success ($Result_BKey@success_value BKey)) ($Result_BKey@error ($Result_BKey@error_value ErrorID)) )
    ( ($Result_BLatLongCoordinate@success ($Result_BLatLongCoordinate@success_value BLatLongCoordinate)) ($Result_BLatLongCoordinate@error ($Result_BLatLongCoordinate@error_value ErrorID)) )
    ( ($Result_List_Main..Light_@success ($Result_List_Main..Light_@success_value List_Main..Light_)) ($Result_List_Main..Light_@error ($Result_List_Main..Light_@error_value ErrorID)) )
    ( ($Result_List_Main..SceneObject_@success ($Result_List_Main..SceneObject_@success_value List_Main..SceneObject_)) ($Result_List_Main..SceneObject_@error ($Result_List_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_ListOps@success ($Result_ListOps@success_value ListOps)) ($Result_ListOps@error ($Result_ListOps@error_value ErrorID)) )
    ( ($Result_BLogicalTime@success ($Result_BLogicalTime@success_value BLogicalTime)) ($Result_BLogicalTime@error ($Result_BLogicalTime@error_value ErrorID)) )
    ( ($Result_Main..Camera@success ($Result_Main..Camera@success_value Main..Camera)) ($Result_Main..Camera@error ($Result_Main..Camera@error_value ErrorID)) )
    ( ($Result_Main..Color@success ($Result_Main..Color@success_value Main..Color)) ($Result_Main..Color@error ($Result_Main..Color@error_value ErrorID)) )
    ( ($Result_Main..ISect@success ($Result_Main..ISect@success_value Main..ISect)) ($Result_Main..ISect@error ($Result_Main..ISect@error_value ErrorID)) )
    ( ($Result_Main..Light@success ($Result_Main..Light@success_value Main..Light)) ($Result_Main..Light@error ($Result_Main..Light@error_value ErrorID)) )
    ( ($Result_Main..Plane@success ($Result_Main..Plane@success_value Main..Plane)) ($Result_Main..Plane@error ($Result_Main..Plane@error_value ErrorID)) )
    ( ($Result_Main..Ray@success ($Result_Main..Ray@success_value Main..Ray)) ($Result_Main..Ray@error ($Result_Main..Ray@error_value ErrorID)) )
    ( ($Result_Main..RayTracer@success ($Result_Main..RayTracer@success_value Main..RayTracer)) ($Result_Main..RayTracer@error ($Result_Main..RayTracer@error_value ErrorID)) )
    ( ($Result_Main..Scene@success ($Result_Main..Scene@success_value Main..Scene)) ($Result_Main..Scene@error ($Result_Main..Scene@error_value ErrorID)) )
    ( ($Result_Main..Sphere@success ($Result_Main..Sphere@success_value Main..Sphere)) ($Result_Main..Sphere@error ($Result_Main..Sphere@error_value ErrorID)) )
    ( ($Result_Main..Surface@success ($Result_Main..Surface@success_value Main..Surface)) ($Result_Main..Surface@error ($Result_Main..Surface@error_value ErrorID)) )
    ( ($Result_Main..Vector@success ($Result_Main..Vector@success_value Main..Vector)) ($Result_Main..Vector@error ($Result_Main..Vector@error_value ErrorID)) )
    ( ($Result_BNat@success ($Result_BNat@success_value BNat)) ($Result_BNat@error ($Result_BNat@error_value ErrorID)) )
    ( ($Result_bsq_none@success ($Result_bsq_none@success_value bsq_none)) ($Result_bsq_none@error ($Result_bsq_none@error_value ErrorID)) )
    ( ($Result_bsq_nothing@success ($Result_bsq_nothing@success_value bsq_nothing)) ($Result_bsq_nothing@error ($Result_bsq_nothing@error_value ErrorID)) )
    ( ($Result_NumericOps@success ($Result_NumericOps@success_value NumericOps)) ($Result_NumericOps@error ($Result_NumericOps@error_value ErrorID)) )
    ( ($Result_BRational@success ($Result_BRational@success_value BRational)) ($Result_BRational@error ($Result_BRational@error_value ErrorID)) )
    ( ($Result_bsq_regex@success ($Result_bsq_regex@success_value bsq_regex)) ($Result_bsq_regex@error ($Result_bsq_regex@error_value ErrorID)) )
    ( ($Result_BRelativeTime@success ($Result_BRelativeTime@success_value BRelativeTime)) ($Result_BRelativeTime@error ($Result_BRelativeTime@error_value ErrorID)) )
    ( ($Result_SeqList_Main..Light_@success ($Result_SeqList_Main..Light_@success_value SeqList_Main..Light_)) ($Result_SeqList_Main..Light_@error ($Result_SeqList_Main..Light_@error_value ErrorID)) )
    ( ($Result_SeqList_Main..SceneObject_@success ($Result_SeqList_Main..SceneObject_@success_value SeqList_Main..SceneObject_)) ($Result_SeqList_Main..SceneObject_@error ($Result_SeqList_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_SeqListOps@success ($Result_SeqListOps@success_value SeqListOps)) ($Result_SeqListOps@error ($Result_SeqListOps@error_value ErrorID)) )
    ( ($Result_BSHAContentHash@success ($Result_BSHAContentHash@success_value BSHAContentHash)) ($Result_BSHAContentHash@error ($Result_BSHAContentHash@error_value ErrorID)) )
    ( ($Result_BString@success ($Result_BString@success_value BString)) ($Result_BString@error ($Result_BString@error_value ErrorID)) )
    ( ($Result_BTickTime@success ($Result_BTickTime@success_value BTickTime)) ($Result_BTickTime@error ($Result_BTickTime@error_value ErrorID)) )
    ( ($Result_BUTCDateTime@success ($Result_BUTCDateTime@success_value BUTCDateTime)) ($Result_BUTCDateTime@error ($Result_BUTCDateTime@error_value ErrorID)) )
    ( ($Result_BUUID4@success ($Result_BUUID4@success_value BUUID4)) ($Result_BUUID4@error ($Result_BUUID4@error_value ErrorID)) )
    ( ($Result_BUUID7@success ($Result_BUUID7@success_value BUUID7)) ($Result_BUUID7@error ($Result_BUUID7@error_value ErrorID)) )
    ( ($Result_Vector1_Main..Light_@success ($Result_Vector1_Main..Light_@success_value Vector1_Main..Light_)) ($Result_Vector1_Main..Light_@error ($Result_Vector1_Main..Light_@error_value ErrorID)) )
    ( ($Result_Vector1_Main..SceneObject_@success ($Result_Vector1_Main..SceneObject_@success_value Vector1_Main..SceneObject_)) ($Result_Vector1_Main..SceneObject_@error ($Result_Vector1_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_Vector2_Main..Light_@success ($Result_Vector2_Main..Light_@success_value Vector2_Main..Light_)) ($Result_Vector2_Main..Light_@error ($Result_Vector2_Main..Light_@error_value ErrorID)) )
    ( ($Result_Vector2_Main..SceneObject_@success ($Result_Vector2_Main..SceneObject_@success_value Vector2_Main..SceneObject_)) ($Result_Vector2_Main..SceneObject_@error ($Result_Vector2_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_Vector3_Main..Light_@success ($Result_Vector3_Main..Light_@success_value Vector3_Main..Light_)) ($Result_Vector3_Main..Light_@error ($Result_Vector3_Main..Light_@error_value ErrorID)) )
    ( ($Result_Vector3_Main..SceneObject_@success ($Result_Vector3_Main..SceneObject_@success_value Vector3_Main..SceneObject_)) ($Result_Vector3_Main..SceneObject_@error ($Result_Vector3_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_Vector4_Main..Light_@success ($Result_Vector4_Main..Light_@success_value Vector4_Main..Light_)) ($Result_Vector4_Main..Light_@error ($Result_Vector4_Main..Light_@error_value ErrorID)) )
    ( ($Result_Vector4_Main..SceneObject_@success ($Result_Vector4_Main..SceneObject_@success_value Vector4_Main..SceneObject_)) ($Result_Vector4_Main..SceneObject_@error ($Result_Vector4_Main..SceneObject_@error_value ErrorID)) )
    ( ($Result_VectorOps@success ($Result_VectorOps@success_value VectorOps)) ($Result_VectorOps@error ($Result_VectorOps@error_value ErrorID)) )
    ;;NO DATA;;
))

;;
;;Free constructors for entrypoint initialization
;;
(declare-fun BBool@UFCons_API (HavocSequence) Bool)
(declare-fun BInt@UFCons_API (HavocSequence) BInt)
(declare-fun BNat@UFCons_API (HavocSequence) BNat)
(declare-fun BBigInt@UFCons_API (HavocSequence) BBigInt)
(declare-fun BBigNat@UFCons_API (HavocSequence) BBigNat)
(declare-fun BFloat@UFCons_API (HavocSequence) BFloat)
(declare-fun BDecimal@UFCons_API (HavocSequence) BDecimal)
(declare-fun BRational@UFCons_API (HavocSequence) BRational)
(declare-fun BString@UFCons_API (HavocSequence) BString)
(declare-fun BByteBuffer@UFCons_API (HavocSequence) (Seq (_ BitVec 8)))
(declare-fun BDateYear@UFCons_API (HavocSequence) BNat)
(declare-fun BDateMonth@UFCons_API (HavocSequence) BNat)
(declare-fun BDateDay@UFCons_API (HavocSequence) BNat)
(declare-fun BDateHour@UFCons_API (HavocSequence) BNat)
(declare-fun BDateMinute@UFCons_API (HavocSequence) BNat)
(declare-fun BDateSecond@UFCons_API (HavocSequence) BNat)
(declare-fun BDateMillis@UFCons_API (HavocSequence) BNat)
(declare-fun BDateTZName@UFCons_API (HavocSequence) BString)
(declare-fun BTickTime@UFCons_API (HavocSequence) BTickTime)
(declare-fun BLogicalTime@UFCons_API (HavocSequence) BLogicalTime)
(declare-fun BUUID4@UFCons_API (HavocSequence) BUUID4)
(declare-fun BUUID7@UFCons_API (HavocSequence) BUUID7)
(declare-fun BSHAContentHash@UFCons_API (HavocSequence) BSHAContentHash)
(declare-fun BLatitude@UFCons_API (HavocSequence) BFloat)
(declare-fun BLongitude@UFCons_API (HavocSequence) BFloat)
(declare-fun ContainerSize@UFCons_API (HavocSequence) BNat)
(declare-fun UnionChoice@UFCons_API (HavocSequence) BNat)

(define-fun _@@cons_None_entrypoint ((ctx HavocSequence)) $Result_bsq_none
  ($Result_bsq_none@success bsq_none@literal)
)

(define-fun _@@cons_Nothing_entrypoint ((ctx HavocSequence)) $Result_bsq_nothing
  ($Result_bsq_nothing@success bsq_nothing@literal)
)

;;@BINTMIN, @BINTMAX, @BNATMAX, @SLENMAX, @BLENMAX
(declare-const @BINTMIN Int) (assert (= @BINTMIN -32768))
(declare-const @BINTMAX Int) (assert (= @BINTMAX 32767))
(declare-const @BNATMAX Int) (assert (= @BNATMAX 65535))
(declare-const @SLENMAX Int) (assert (= @SLENMAX 48))
(declare-const @BLENMAX Int) (assert (= @BLENMAX 32))
(declare-const @CONTAINERMAX Int) (assert (= @CONTAINERMAX 4))

(define-fun _@@cons_Bool_entrypoint ((ctx HavocSequence)) $Result_Bool
  ($Result_Bool@success (BBool@UFCons_API ctx))
)

(define-fun _@@cons_Int_entrypoint ((ctx HavocSequence)) $Result_BInt
  (let ((iv (BInt@UFCons_API ctx)))
    (ite (and (<= @BINTMIN iv) (<= iv @BINTMAX))
      ($Result_BInt@success iv)
      ($Result_BInt@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_Nat_entrypoint ((ctx HavocSequence)) $Result_BNat
  (let ((iv (BNat@UFCons_API ctx)))
    (ite (and (<= 0 iv) (<= iv @BNATMAX))
      ($Result_BNat@success iv)
      ($Result_BNat@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_BigInt_entrypoint ((ctx HavocSequence)) $Result_BBigInt
  (let ((iv (BBigInt@UFCons_API ctx)))
    (ite (and (<= (+ @BINTMIN @BINTMIN) iv) (<= iv (+ @BINTMAX @BINTMAX)))
      ($Result_BBigInt@success iv)
      ($Result_BBigInt@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_BigNat_entrypoint ((ctx HavocSequence)) $Result_BBigNat
  (let ((iv (BBigNat@UFCons_API ctx)))
    (ite (and (<= 0 iv) (<= iv (+ @BNATMAX @BNATMAX)))
      ($Result_BBigNat@success iv)
      ($Result_BBigNat@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_Float_entrypoint ((ctx HavocSequence)) $Result_BFloat
  ($Result_BFloat@success (BFloat@UFCons_API ctx))
)

(define-fun _@@cons_Decimal_entrypoint ((ctx HavocSequence)) $Result_BDecimal
  ($Result_BDecimal@success (BDecimal@UFCons_API ctx))
)

(define-fun _@@cons_Rational_entrypoint ((ctx HavocSequence)) $Result_BRational
  ($Result_BRational@success (BRational@UFCons_API ctx))
)

(define-fun _@@cons_String_entrypoint ((ctx HavocSequence)) $Result_BString
  (let ((sv (BString@UFCons_API ctx)))
    (ite (<= (str.len sv) @SLENMAX)
      ($Result_BString@success sv)
      ($Result_BString@error ErrorID_AssumeCheck)
    )
  )
)

(define-fun _@@cons_ByteBuffer_entrypoint ((ctx HavocSequence)) $Result_BByteBuffer
  (let ((compress (BNat@UFCons_API (seq.++ ctx (seq.unit 0)))) (format (BNat@UFCons_API (seq.++ ctx (seq.unit 1)))) (buff (BByteBuffer@UFCons_API (seq.++ ctx (seq.unit 2)))))
    (ite (and (< compress 2) (< format 4) (<= (seq.len buff) @BLENMAX))
      ($Result_BByteBuffer@success (BByteBuffer@cons buff compress format))
      ($Result_BByteBuffer@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun @@isLeapYear ((y Int)) Bool
  (ite (or (= y 1900) (= y 2100) (= y 2200))
    false
    (= (mod y 4) 0)
  )
)

(define-fun @@check_DayInMonth ((d Int) (m Int) (y Int)) Bool
  (ite (= m 1)
    (ite (@@isLeapYear y)
      (<= d 29)
      (<= d 28)
    )
    (ite (or (= m 3) (= m 5) (= m 8) (= m 10))
      (<= d 30)
      (<= d 31)
    )
  )
)

(define-fun _@@cons_DateTime_entrypoint ((ctx HavocSequence)) $Result_BDateTime
  (let ((y (BDateYear@UFCons_API ctx)) (m (BDateMonth@UFCons_API ctx)) (d (BDateDay@UFCons_API ctx)) (hh (BDateHour@UFCons_API ctx)) (mm (BDateMinute@UFCons_API ctx)) (tzo (BDateTZName@UFCons_API ctx)))
    (ite (and (<= 1900 y) (<= y 2200) (<= 0 m) (<= m 11) (<= 1 d) (@@check_DayInMonth d m y) (<= 0 hh) (<= hh 23) (<= 0 mm) (<= mm 59) (or (= tzo "UTC") (= tzo "PST") (= tzo "MST") (= tzo "CEST")))
      ($Result_BDateTime@success (BDateTime@cons y m d hh mm tzo))
      ($Result_BDateTime@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_UTCDateTime_entrypoint ((ctx HavocSequence)) $Result_BUTCDateTime
  (let ((y (BDateYear@UFCons_API ctx)) (m (BDateMonth@UFCons_API ctx)) (d (BDateDay@UFCons_API ctx)) (hh (BDateHour@UFCons_API ctx)) (mm (BDateMinute@UFCons_API ctx)))
    (ite (and (<= 1900 y) (<= y 2200) (<= 0 m) (<= m 11) (<= 1 d) (@@check_DayInMonth d m y) (<= 0 hh) (<= hh 23) (<= 0 mm) (<= mm 59))
      ($Result_BUTCDateTime@success (BUTCDateTime@cons y m d hh mm))
      ($Result_BUTCDateTime@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_CalendarDate_entrypoint ((ctx HavocSequence)) $Result_BCalendarDate
  (let ((y (BDateYear@UFCons_API ctx)) (m (BDateMonth@UFCons_API ctx)) (d (BDateDay@UFCons_API ctx)))
    (ite (and (<= 1900 y) (<= y 2200) (<= 0 m) (<= m 11) (<= 1 d) (@@check_DayInMonth d m y))
      ($Result_BCalendarDate@success (BCalendarDate@cons y m d))
      ($Result_BCalendarDate@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_RelativeTime_entrypoint ((ctx HavocSequence)) $Result_BRelativeTime
  (let ((hh (BDateHour@UFCons_API (seq.++ ctx (seq.unit 3)))) (mm (BDateMinute@UFCons_API (seq.++ ctx (seq.unit 4)))))
    (ite (and (<= 0 hh) (<= hh 23) (<= 0 mm) (<= mm 59))
      ($Result_BRelativeTime@success (BRelativeTime@cons hh mm))
      ($Result_BRelativeTime@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_TickTime_entrypoint ((ctx HavocSequence)) $Result_BTickTime
  (let ((tv (BTickTime@UFCons_API ctx)))
    (ite (and (<= 0 tv) (<= tv 1048576))
      ($Result_BTickTime@success tv)
      ($Result_BTickTime@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_LogicalTime_entrypoint ((ctx HavocSequence)) $Result_BLogicalTime
  (let ((lv (BLogicalTime@UFCons_API ctx)))
    (ite (and (<= 0 lv) (<= lv 64))
      ($Result_BLogicalTime@success lv)
      ($Result_BLogicalTime@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_ISOTimeStamp_entrypoint ((ctx HavocSequence)) $Result_BISOTimeStamp
  (let ((y (BDateYear@UFCons_API ctx)) (m (BDateMonth@UFCons_API ctx)) (d (BDateDay@UFCons_API ctx)) (hh (BDateHour@UFCons_API ctx)) (mm (BDateMinute@UFCons_API ctx)) (ss (BDateSecond@UFCons_API ctx)) (millis (BDateMillis@UFCons_API ctx)))
    (ite (and (<= 1900 y) (<= y 2200) (<= 0 m) (<= m 11) (<= 1 d) (@@check_DayInMonth d m y) (<= 0 hh) (<= hh 23) (<= 0 mm) (<= mm 59) (<= 0 ss) (<= ss 60) (<= 0 millis) (<= millis 999))
      ($Result_BISOTimeStamp@success (BISOTimeStamp@cons y m d hh mm ss millis))
      ($Result_BISOTimeStamp@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_UUID4_entrypoint ((ctx HavocSequence)) $Result_BUUID4
  (let ((uuv (BUUID4@UFCons_API ctx)))
    (ite (str.in.re uuv (re.loop (re.union (re.range "0" "9") (re.range "a" "f")) 32 32))
      ($Result_BUUID4@success uuv)
      ($Result_BUUID4@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_UUID7_entrypoint ((ctx HavocSequence)) $Result_BUUID7
  (let ((uuv (BUUID7@UFCons_API ctx)))
    (ite (str.in.re uuv (re.loop (re.union (re.range "0" "9") (re.range "a" "f")) 32 32))
      ($Result_BUUID7@success uuv)
      ($Result_BUUID7@error ErrorID_AssumeCheck) 
    )
  )
)

(define-fun _@@cons_ContentHash_entrypoint ((ctx HavocSequence)) $Result_BSHAContentHash
  ($Result_BSHAContentHash@success (BSHAContentHash@UFCons_API ctx))
)

(define-fun _@@cons_LatLongCoordinate_entrypoint ((ctx HavocSequence)) $Result_BLatLongCoordinate
  (let ((lat (BFloat@UFCons_API (seq.++ ctx (seq.unit 0)))) (long (BFloat@UFCons_API (seq.++ ctx (seq.unit 1)))))
    (ite (and (<= -90.0 lat) (<= lat 90.0) (< -180.0 long) (<= long 180.0))
      ($Result_BLatLongCoordinate@success (BLatLongCoordinate@cons lat long))
      ($Result_BLatLongCoordinate@error ErrorID_AssumeCheck) 
    )
  )
)

(declare-fun Real@Pow@UF (Real Real) Real)

(define-fun Float@Pow ((x BFloat) (y BFloat)) $Result_BFloat
    (ite (or (= x 0.0) (= x 1.0) (= y 1.0))
        ($Result_BFloat@success x)
        (ite (= y 0.0)
            ($Result_BFloat@success 0.0)
            (let ((rr (Real@Pow@UF x y)))
                ;;TODO add some other algebraic info here -- = y 2 then sqrt, < x 1 and > y 1 => rr < x, etc.
                (ite (or (= rr 0.0) (= rr x))
                    ($Result_BFloat@error ErrorID_AssumeCheck) 
                    ($Result_BFloat@success rr)
                )
            )
        )
    )
)

(define-fun Decimal@Pow ((x BFloat) (y BFloat)) $Result_BDecimal
    (ite (or (= x 0.0) (= x 1.0) (= y 1.0))
        ($Result_BDecimal@success x)
        (ite (= y 0.0)
            ($Result_BDecimal@success 0.0)
            (let ((rr (Real@Pow@UF x y)))
                ;;TODO add some other algebraic info here -- = y 2 then sqrt, < x 1 and > y 1 => rr < x, etc.
                (ite (or (= rr 0.0) (= rr x))
                    ($Result_BDecimal@error ErrorID_AssumeCheck) 
                    ($Result_BDecimal@success rr)
                )
            )
        )
    )
)

(declare-const Main..Color..background Main..Color)
(declare-const Main..Scene..checkerBoard Main..Surface)
(declare-const Main..Scene..matteShiny Main..Surface)
(declare-const Main..Scene..shiny Main..Surface)

;;NO DATA;;

(define-fun $ListSingletonCons_3_List_Main..SceneObject_ ((arg0 BTerm) (arg1 BTerm) (arg2 BTerm)) List_Main..SceneObject_
(BTerm@termbox TypeTag_Vector3_Main..SceneObject_ (Vector3_Main..SceneObject_@box (Vector3_Main..SceneObject_@cons arg0 arg1 arg2)))
)

(define-fun $ListSingletonCons_2_List_Main..Light_ ((arg0 Main..Light) (arg1 Main..Light)) List_Main..Light_
(BTerm@termbox TypeTag_Vector2_Main..Light_ (Vector2_Main..Light_@box (Vector2_Main..Light_@cons arg0 arg1)))
)

(define-fun Core..-_infix__Main..Vector__Main..Vector_ ((a Main..Vector) (b Main..Vector)) Main..Vector
(let ((@tmp_4 (Main..Vector@_x a)))
    (let ((@tmp_7 (Main..Vector@_x b)))
      (let ((@tmp_1 (- @tmp_4 @tmp_7)))
        (let ((@tmp_11 (Main..Vector@_y a)))
          (let ((@tmp_14 (Main..Vector@_y b)))
            (let ((@tmp_8 (- @tmp_11 @tmp_14)))
              (let ((@tmp_18 (Main..Vector@_z a)))
                (let ((@tmp_21 (Main..Vector@_z b)))
                  (let ((@tmp_15 (- @tmp_18 @tmp_21)))
                    (let ((@tmp_0 (Main..Vector@cons @tmp_1 @tmp_8 @tmp_15)))
                      (let (($__ir_ret__ @tmp_0))
                        (let (($return $__ir_ret__))
                          $return
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..%dotprod%__Main..Vector__Main..Vector_ ((a Main..Vector) (b Main..Vector)) BFloat
(let ((@tmp_5 (Main..Vector@_x a)))
    (let ((@tmp_8 (Main..Vector@_x b)))
      (let ((@tmp_2 (* @tmp_5 @tmp_8)))
        (let ((@tmp_12 (Main..Vector@_y a)))
          (let ((@tmp_15 (Main..Vector@_y b)))
            (let ((@tmp_9 (* @tmp_12 @tmp_15)))
              (let ((@tmp_1 (+ @tmp_2 @tmp_9)))
                (let ((@tmp_19 (Main..Vector@_z a)))
                  (let ((@tmp_22 (Main..Vector@_z b)))
                    (let ((@tmp_16 (* @tmp_19 @tmp_22)))
                      (let ((@tmp_0 (+ @tmp_1 @tmp_16)))
                        (let (($__ir_ret__ @tmp_0))
                          (let (($return $__ir_ret__))
                            $return
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun core.bsq_k0_pre@0..271@14409..pre@0 ((this BFloat)) Bool
(let ((@tmp_0 (>= this BFloat@zero)))
    (let (($__ir_ret__ @tmp_0))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun NumericOps..s_floatSqrt ((x BFloat)) BFloat
(^ x 0.5)
)

(define-fun Float..sqrt ((this BFloat)) $Result_BFloat
(let ((@tmp_0 (core.bsq_k0_pre@0..271@14409..pre@0 this)))
    (ite @tmp_0
      (let ((@tmp_1 (NumericOps..s_floatSqrt this)))
        (let (($__ir_ret__ @tmp_1))
          (let (($return $__ir_ret__))
            ($Result_BFloat@success $return)
          )
        )
      )
      ($Result_BFloat@error ErrorID_AssumeCheck)
    )
  )
)

(define-fun Main..Vector..mag ((this Main..Vector)) $Result_BFloat
(let ((@tmp_1 (Main..%dotprod%__Main..Vector__Main..Vector_ this this)))
    (let ((_@tmpvar@0 (Float..sqrt @tmp_1)))
      (ite ((_ is $Result_BFloat@error) _@tmpvar@0)
        _@tmpvar@0
        (let ((@tmp_4 ($Result_BFloat@success_value _@tmpvar@0)))
          (let (($__ir_ret__ @tmp_4))
            (let (($return $__ir_ret__))
              ($Result_BFloat@success $return)
            )
          )
        )
      )
    )
  )
)

(define-fun Core..*_infix__Float__Main..Vector_ ((f BFloat) (v Main..Vector)) Main..Vector
(let ((@tmp_4 (Main..Vector@_x v)))
    (let ((@tmp_1 (* @tmp_4 f)))
      (let ((@tmp_9 (Main..Vector@_y v)))
        (let ((@tmp_6 (* @tmp_9 f)))
          (let ((@tmp_14 (Main..Vector@_z v)))
            (let ((@tmp_11 (* @tmp_14 f)))
              (let ((@tmp_0 (Main..Vector@cons @tmp_1 @tmp_6 @tmp_11)))
                (let (($__ir_ret__ @tmp_0))
                  (let (($return $__ir_ret__))
                    $return
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun __i__Main..Vector..norm$Lselect_done_3 ((@tmp_3 BFloat) (this Main..Vector)) Main..Vector
(let ((dv @tmp_3))
    (let ((@tmp_11 (Core..*_infix__Float__Main..Vector_ @tmp_3 this)))
      (let (($__ir_ret__ @tmp_11))
        (let (($return $__ir_ret__))
          $return
        )
      )
    )
  )
)

(define-fun Main..Vector..norm ((this Main..Vector)) $Result_Main..Vector
(let ((_@tmpvar@2 (Main..Vector..mag this)))
    (ite ((_ is $Result_BFloat@error) _@tmpvar@2)
      ($Result_Main..Vector@error ($Result_BFloat@error_value _@tmpvar@2))
      (let ((@tmp_2 ($Result_BFloat@success_value _@tmpvar@2)))
        (let ((mv @tmp_2))
          (let ((@tmp_4 (= @tmp_2 BFloat@zero)))
            (ite @tmp_4
              (let ((@tmp_3$1 1000000000.0))
                (let (($__ir_ret__$1 (__i__Main..Vector..norm$Lselect_done_3 @tmp_3$1 this)))
                  (let (($__ir_ret__$2 $__ir_ret__$1))
                    (let (($return $__ir_ret__$2))
                      ($Result_Main..Vector@success $return)
                    )
                  )
                )
              )
              (let ((_@tmpvar@1 (ite (= BFloat@zero mv) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ BFloat@one mv)))))
                (ite ((_ is $Result_BFloat@error) _@tmpvar@1)
                  ($Result_Main..Vector@error ($Result_BFloat@error_value _@tmpvar@1))
                  (let ((@tmp_8 ($Result_BFloat@success_value _@tmpvar@1)))
                    (let ((@tmp_3 @tmp_8))
                      (let (($__ir_ret__ (__i__Main..Vector..norm$Lselect_done_3 @tmp_3 this)))
                        (let (($__ir_ret__$2 $__ir_ret__))
                          (let (($return $__ir_ret__$2))
                            ($Result_Main..Vector@success $return)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..%crossprod%__Main..Vector__Main..Vector_ ((a Main..Vector) (b Main..Vector)) Main..Vector
(let ((@tmp_5 (Main..Vector@_y a)))
    (let ((@tmp_8 (Main..Vector@_z b)))
      (let ((@tmp_2 (* @tmp_5 @tmp_8)))
        (let ((@tmp_12 (Main..Vector@_z a)))
          (let ((@tmp_15 (Main..Vector@_y b)))
            (let ((@tmp_9 (* @tmp_12 @tmp_15)))
              (let ((@tmp_1 (- @tmp_2 @tmp_9)))
                (let ((@tmp_20 (Main..Vector@_z a)))
                  (let ((@tmp_23 (Main..Vector@_x b)))
                    (let ((@tmp_17 (* @tmp_20 @tmp_23)))
                      (let ((@tmp_27 (Main..Vector@_x a)))
                        (let ((@tmp_30 (Main..Vector@_z b)))
                          (let ((@tmp_24 (* @tmp_27 @tmp_30)))
                            (let ((@tmp_16 (- @tmp_17 @tmp_24)))
                              (let ((@tmp_35 (Main..Vector@_x a)))
                                (let ((@tmp_38 (Main..Vector@_y b)))
                                  (let ((@tmp_32 (* @tmp_35 @tmp_38)))
                                    (let ((@tmp_42 (Main..Vector@_y a)))
                                      (let ((@tmp_45 (Main..Vector@_x b)))
                                        (let ((@tmp_39 (* @tmp_42 @tmp_45)))
                                          (let ((@tmp_31 (- @tmp_32 @tmp_39)))
                                            (let ((@tmp_0 (Main..Vector@cons @tmp_1 @tmp_16 @tmp_31)))
                                              (let (($__ir_ret__ @tmp_0))
                                                (let (($return $__ir_ret__))
                                                  $return
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..Camera..create ((pos Main..Vector) (lookAt Main..Vector)) $Result_Main..Camera
(let ((@tmp_1 (Core..-_infix__Main..Vector__Main..Vector_ lookAt pos)))
    (let ((_@tmpvar@5 (Main..Vector..norm @tmp_1)))
      (ite ((_ is $Result_Main..Vector@error) _@tmpvar@5)
        ($Result_Main..Camera@error ($Result_Main..Vector@error_value _@tmpvar@5))
        (let ((@tmp_4 ($Result_Main..Vector@success_value _@tmpvar@5)))
          (let ((forward @tmp_4))
            (let ((@tmp_5 (Main..Vector@cons BFloat@zero -1.0 BFloat@zero)))
              (let ((down @tmp_5))
                (let ((@tmp_12 (Main..%crossprod%__Main..Vector__Main..Vector_ @tmp_4 @tmp_5)))
                  (let ((_@tmpvar@4 (Main..Vector..norm @tmp_12)))
                    (ite ((_ is $Result_Main..Vector@error) _@tmpvar@4)
                      ($Result_Main..Camera@error ($Result_Main..Vector@error_value _@tmpvar@4))
                      (let ((@tmp_15 ($Result_Main..Vector@success_value _@tmpvar@4)))
                        (let ((@tmp_9 (Core..*_infix__Float__Main..Vector_ 1.5 @tmp_15)))
                          (let ((right @tmp_9))
                            (let ((@tmp_19 (Main..%crossprod%__Main..Vector__Main..Vector_ @tmp_4 @tmp_9)))
                              (let ((_@tmpvar@3 (Main..Vector..norm @tmp_19)))
                                (ite ((_ is $Result_Main..Vector@error) _@tmpvar@3)
                                  ($Result_Main..Camera@error ($Result_Main..Vector@error_value _@tmpvar@3))
                                  (let ((@tmp_22 ($Result_Main..Vector@success_value _@tmpvar@3)))
                                    (let ((@tmp_16 (Core..*_infix__Float__Main..Vector_ 1.5 @tmp_22)))
                                      (let ((up @tmp_16))
                                        (let ((@tmp_23 (Main..Camera@cons pos @tmp_4 @tmp_16 @tmp_9)))
                                          (let (($__ir_ret__ @tmp_23))
                                            (let (($return $__ir_ret__))
                                              ($Result_Main..Camera@success $return)
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..createDefaultScene () $Result_Main..Scene
(let ((@tmp_4 (Main..Vector@cons -0.5 BFloat@one 1.5)))
    (let ((@tmp_1 (Main..Sphere@cons Main..Scene..matteShiny 0 @tmp_4 0.5)))
      (let ((@tmp_9 (BTerm@termbox TypeTag_Main..Sphere (Main..Sphere@box @tmp_1))))
        (let ((@tmp_13 (Main..Vector@cons BFloat@zero BFloat@one -0.25)))
          (let ((@tmp_10 (Main..Sphere@cons Main..Scene..shiny 1 @tmp_13 BFloat@one)))
            (let ((@tmp_18 (BTerm@termbox TypeTag_Main..Sphere (Main..Sphere@box @tmp_10))))
              (let ((@tmp_22 (Main..Vector@cons BFloat@zero BFloat@one BFloat@zero)))
                (let ((@tmp_19 (Main..Plane@cons Main..Scene..checkerBoard 2 @tmp_22 BFloat@zero)))
                  (let ((@tmp_27 (BTerm@termbox TypeTag_Main..Plane (Main..Plane@box @tmp_19))))
                    (let ((@tmp_0 ($ListSingletonCons_3_List_Main..SceneObject_ @tmp_9 @tmp_18 @tmp_27)))
                      (let ((things @tmp_0))
                        (let ((@tmp_30 (Main..Vector@cons -2.0 2.5 BFloat@zero)))
                          (let ((@tmp_34 (Main..Color@cons 0.5 0.45 0.41)))
                            (let ((@tmp_29 (Main..Light@cons @tmp_30 @tmp_34)))
                              (let ((@tmp_39 (Main..Vector@cons 2.0 4.5 2.0)))
                                (let ((@tmp_43 (Main..Color@cons 0.99 0.95 0.8)))
                                  (let ((@tmp_38 (Main..Light@cons @tmp_39 @tmp_43)))
                                    (let ((@tmp_28 ($ListSingletonCons_2_List_Main..Light_ @tmp_29 @tmp_38)))
                                      (let ((lights @tmp_28))
                                        (let ((@tmp_48 (Main..Vector@cons 2.75 2.0 3.75)))
                                          (let ((@tmp_52 (Main..Vector@cons -0.6 0.5 BFloat@zero)))
                                            (let ((_@tmpvar@6 (Main..Camera..create @tmp_48 @tmp_52)))
                                              (ite ((_ is $Result_Main..Camera@error) _@tmpvar@6)
                                                ($Result_Main..Scene@error ($Result_Main..Camera@error_value _@tmpvar@6))
                                                (let ((@tmp_47 ($Result_Main..Camera@success_value _@tmpvar@6)))
                                                  (let ((camera @tmp_47))
                                                    (let ((@tmp_56 (Main..Scene@cons @tmp_0 @tmp_28 @tmp_47)))
                                                      (let (($__ir_ret__ @tmp_56))
                                                        (let (($return $__ir_ret__))
                                                          ($Result_Main..Scene@success $return)
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun NumericOps..s_natToBigNat ((n BNat)) BBigNat
n
)

(define-fun NumericOps..s_bigNatToFloat ((n BBigNat)) BFloat
(to_real n)
)

(define-fun Nat..toFloat ((this BNat)) BFloat
(let ((@tmp_1 (NumericOps..s_natToBigNat this)))
    (let ((@tmp_0 (NumericOps..s_bigNatToFloat @tmp_1)))
      (let (($__ir_ret__ @tmp_0))
        (let (($return $__ir_ret__))
          $return
        )
      )
    )
  )
)

(define-fun Main..RayTracer..recenterX ((this Main..RayTracer) (x BFloat)) $Result_BFloat
(let ((@tmp_6 (Main..RayTracer@_screenWidth this)))
    (let ((@tmp_7 (Nat..toFloat @tmp_6)))
      (let ((_@tmpvar@8 (ite (= BFloat@zero 2.0) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ @tmp_7 2.0)))))
        (ite ((_ is $Result_BFloat@error) _@tmpvar@8)
          _@tmpvar@8
          (let ((@tmp_3 ($Result_BFloat@success_value _@tmpvar@8)))
            (let ((@tmp_1 (- x @tmp_3)))
              (let ((@tmp_13 (Main..RayTracer@_screenWidth this)))
                (let ((@tmp_14 (Nat..toFloat @tmp_13)))
                  (let ((@tmp_9 (* 2.0 @tmp_14)))
                    (let ((_@tmpvar@7 (ite (= BFloat@zero @tmp_9) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ @tmp_1 @tmp_9)))))
                      (ite ((_ is $Result_BFloat@error) _@tmpvar@7)
                        _@tmpvar@7
                        (let ((@tmp_0 ($Result_BFloat@success_value _@tmpvar@7)))
                          (let (($__ir_ret__ @tmp_0))
                            (let (($return $__ir_ret__))
                              ($Result_BFloat@success $return)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Core..+_infix__Main..Vector__Main..Vector_ ((a Main..Vector) (b Main..Vector)) Main..Vector
(let ((@tmp_4 (Main..Vector@_x a)))
    (let ((@tmp_7 (Main..Vector@_x b)))
      (let ((@tmp_1 (+ @tmp_4 @tmp_7)))
        (let ((@tmp_11 (Main..Vector@_y a)))
          (let ((@tmp_14 (Main..Vector@_y b)))
            (let ((@tmp_8 (+ @tmp_11 @tmp_14)))
              (let ((@tmp_18 (Main..Vector@_z a)))
                (let ((@tmp_21 (Main..Vector@_z b)))
                  (let ((@tmp_15 (+ @tmp_18 @tmp_21)))
                    (let ((@tmp_0 (Main..Vector@cons @tmp_1 @tmp_8 @tmp_15)))
                      (let (($__ir_ret__ @tmp_0))
                        (let (($return $__ir_ret__))
                          $return
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..recenterY ((this Main..RayTracer) (y BFloat)) $Result_BFloat
(let ((@tmp_7 (Main..RayTracer@_screenHeight this)))
    (let ((@tmp_8 (Nat..toFloat @tmp_7)))
      (let ((_@tmpvar@10 (ite (= BFloat@zero 2.0) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ @tmp_8 2.0)))))
        (ite ((_ is $Result_BFloat@error) _@tmpvar@10)
          _@tmpvar@10
          (let ((@tmp_4 ($Result_BFloat@success_value _@tmpvar@10)))
            (let ((@tmp_2 (- y @tmp_4)))
              (let ((@tmp_1 (- @tmp_2)))
                (let ((@tmp_14 (Main..RayTracer@_screenHeight this)))
                  (let ((@tmp_15 (Nat..toFloat @tmp_14)))
                    (let ((@tmp_10 (* 2.0 @tmp_15)))
                      (let ((_@tmpvar@9 (ite (= BFloat@zero @tmp_10) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ @tmp_1 @tmp_10)))))
                        (ite ((_ is $Result_BFloat@error) _@tmpvar@9)
                          _@tmpvar@9
                          (let ((@tmp_0 ($Result_BFloat@success_value _@tmpvar@9)))
                            (let (($__ir_ret__ @tmp_0))
                              (let (($return $__ir_ret__))
                                ($Result_BFloat@success $return)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..getPoint ((this Main..RayTracer) (x BFloat) (y BFloat) (camera Main..Camera)) $Result_Main..Vector
(let ((@tmp_5 (Main..Camera@_forward camera)))
    (let ((_@tmpvar@13 (Main..RayTracer..recenterX this x)))
      (ite ((_ is $Result_BFloat@error) _@tmpvar@13)
        ($Result_Main..Vector@error ($Result_BFloat@error_value _@tmpvar@13))
        (let ((@tmp_9 ($Result_BFloat@success_value _@tmpvar@13)))
          (let ((@tmp_13 (Main..Camera@_right camera)))
            (let ((@tmp_6 (Core..*_infix__Float__Main..Vector_ @tmp_9 @tmp_13)))
              (let ((@tmp_2 (Core..+_infix__Main..Vector__Main..Vector_ @tmp_5 @tmp_6)))
                (let ((_@tmpvar@12 (Main..RayTracer..recenterY this y)))
                  (ite ((_ is $Result_BFloat@error) _@tmpvar@12)
                    ($Result_Main..Vector@error ($Result_BFloat@error_value _@tmpvar@12))
                    (let ((@tmp_17 ($Result_BFloat@success_value _@tmpvar@12)))
                      (let ((@tmp_21 (Main..Camera@_up camera)))
                        (let ((@tmp_14 (Core..*_infix__Float__Main..Vector_ @tmp_17 @tmp_21)))
                          (let ((@tmp_1 (Core..+_infix__Main..Vector__Main..Vector_ @tmp_2 @tmp_14)))
                            (let ((_@tmpvar@11 (Main..Vector..norm @tmp_1)))
                              (ite ((_ is $Result_Main..Vector@error) _@tmpvar@11)
                                _@tmpvar@11
                                (let ((@tmp_22 ($Result_Main..Vector@success_value _@tmpvar@11)))
                                  (let (($__ir_ret__ @tmp_22))
                                    (let (($return $__ir_ret__))
                                      ($Result_Main..Vector@success $return)
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun ListOps..s_list_empty_T_Main..SceneObject_ ((l List_Main..SceneObject_)) Bool
(let ((@tmp_1 l))
    (let ((@tmp_0 (= @tmp_1 BTerm@none)))
      (let (($__ir_ret__ @tmp_0))
        (let (($return $__ir_ret__))
          $return
        )
      )
    )
  )
)

(define-fun SeqListOps..s_list_front_T_Main..SceneObject_ ((l SeqList_Main..SceneObject_)) BTerm
(seq.nth (SeqList_Main..SceneObject__seq l) 0)
)

(define-fun Vector1_Main..SceneObject_..s_list_front_T_Main..SceneObject_ ((l Vector1_Main..SceneObject_)) BTerm
(let ((@tmp_2 (Vector1_Main..SceneObject_@_v0 l)))
    (let (($__ir_ret__ @tmp_2))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun Vector2_Main..SceneObject_..s_list_front_T_Main..SceneObject_ ((l Vector2_Main..SceneObject_)) BTerm
(let ((@tmp_2 (Vector2_Main..SceneObject_@_v0 l)))
    (let (($__ir_ret__ @tmp_2))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun Vector3_Main..SceneObject_..s_list_front_T_Main..SceneObject_ ((l Vector3_Main..SceneObject_)) BTerm
(let ((@tmp_2 (Vector3_Main..SceneObject_@_v0 l)))
    (let (($__ir_ret__ @tmp_2))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun Vector4_Main..SceneObject_..s_list_front_T_Main..SceneObject_ ((l Vector4_Main..SceneObject_)) BTerm
(let ((@tmp_2 (Vector4_Main..SceneObject_@_v0 l)))
    (let (($__ir_ret__ @tmp_2))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun VectorOps..s_list_front_T_Main..SceneObject_ ((l BTerm)) BTerm
(let ((@tmp_2 ((_ is Vector1_Main..SceneObject_@box) (BTerm_termvalue l))))
    (ite @tmp_2
      (let ((@tmp_5 (bsqobject_Vector1_Main..SceneObject__value (BTerm_termvalue l))))
        (let ((@tmp_3 (Vector1_Main..SceneObject_..s_list_front_T_Main..SceneObject_ @tmp_5)))
          (let (($__ir_ret__$3 @tmp_3))
            (let (($__ir_ret__$4 $__ir_ret__$3))
              (let (($return $__ir_ret__$4))
                $return
              )
            )
          )
        )
      )
      (let ((@tmp_8 ((_ is Vector2_Main..SceneObject_@box) (BTerm_termvalue l))))
        (ite @tmp_8
          (let ((@tmp_11 (bsqobject_Vector2_Main..SceneObject__value (BTerm_termvalue l))))
            (let ((@tmp_9 (Vector2_Main..SceneObject_..s_list_front_T_Main..SceneObject_ @tmp_11)))
              (let (($__ir_ret__$2 @tmp_9))
                (let (($__ir_ret__$4 $__ir_ret__$2))
                  (let (($return $__ir_ret__$4))
                    $return
                  )
                )
              )
            )
          )
          (let ((@tmp_14 ((_ is Vector3_Main..SceneObject_@box) (BTerm_termvalue l))))
            (ite @tmp_14
              (let ((@tmp_17 (bsqobject_Vector3_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((@tmp_15 (Vector3_Main..SceneObject_..s_list_front_T_Main..SceneObject_ @tmp_17)))
                  (let (($__ir_ret__$1 @tmp_15))
                    (let (($__ir_ret__$4 $__ir_ret__$1))
                      (let (($return $__ir_ret__$4))
                        $return
                      )
                    )
                  )
                )
              )
              (let ((@tmp_20 (bsqobject_Vector4_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((@tmp_18 (Vector4_Main..SceneObject_..s_list_front_T_Main..SceneObject_ @tmp_20)))
                  (let (($__ir_ret__ @tmp_18))
                    (let (($__ir_ret__$4 $__ir_ret__))
                      (let (($return $__ir_ret__$4))
                        $return
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun ListOps..s_list_front_T_Main..SceneObject_ ((l List_Main..SceneObject_)) BTerm
(let ((@tmp_0 l))
    (let ((ll @tmp_0))
      (let ((@tmp_4 ((_ is SeqList_Main..SceneObject_@box) (BTerm_termvalue @tmp_0))))
        (ite @tmp_4
          (let ((@tmp_7 (bsqobject_SeqList_Main..SceneObject__value (BTerm_termvalue ll))))
            (let ((@tmp_5 (SeqListOps..s_list_front_T_Main..SceneObject_ @tmp_7)))
              (let (($__ir_ret__$1 @tmp_5))
                (let (($__ir_ret__$2 $__ir_ret__$1))
                  (let (($return $__ir_ret__$2))
                    $return
                  )
                )
              )
            )
          )
          (let ((@tmp_11 ll))
            (let ((@tmp_8 (VectorOps..s_list_front_T_Main..SceneObject_ @tmp_11)))
              (let (($__ir_ret__ @tmp_8))
                (let (($__ir_ret__$2 $__ir_ret__))
                  (let (($return $__ir_ret__$2))
                    $return
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun __i__Main..Sphere..intersect$Lifstmt_done_3 ((dist BFloat) (ray Main..Ray) (this Main..Sphere)) BTerm
(let ((@tmp_40 (= dist BFloat@zero)))
    (ite @tmp_40
      (let ((@tmp_44 BTerm@none))
        (let (($__ir_ret__$1 @tmp_44))
          (let (($__ir_ret__$2 $__ir_ret__$1))
            (let (($return $__ir_ret__$2))
              $return
            )
          )
        )
      )
      (let ((@tmp_49 (BTerm@termbox TypeTag_Main..Sphere (Main..Sphere@box this))))
        (let ((@tmp_45 (Main..ISect@cons @tmp_49 ray dist)))
          (let ((@tmp_50 (BTerm@termbox TypeTag_Main..ISect (Main..ISect@box @tmp_45))))
            (let (($__ir_ret__ @tmp_50))
              (let (($__ir_ret__$2 $__ir_ret__))
                (let (($return $__ir_ret__$2))
                  $return
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Float..square ((this BFloat)) BFloat
(let ((@tmp_0 (* this this)))
    (let (($__ir_ret__ @tmp_0))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun __i__Main..Sphere..intersect$Lselect_done_6 ((@tmp_30 BFloat) (ray Main..Ray) (this Main..Sphere)) BTerm
(let ((dist @tmp_30))
    (let (($__ir_ret__ (__i__Main..Sphere..intersect$Lifstmt_done_3 dist ray this)))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun intersect ((this Main..Sphere) (ray Main..Ray)) $Result_BTerm
(let ((@tmp_3 (Main..Sphere@_center this)))
    (let ((@tmp_6 (Main..Ray@_start ray)))
      (let ((@tmp_0 (Core..-_infix__Main..Vector__Main..Vector_ @tmp_3 @tmp_6)))
        (let ((eo @tmp_0))
          (let ((@tmp_11 (Main..Ray@_dir ray)))
            (let ((@tmp_7 (Main..%dotprod%__Main..Vector__Main..Vector_ @tmp_0 @tmp_11)))
              (let ((v @tmp_7))
                (let ((@tmp_13 (< @tmp_7 BFloat@zero)))
                  (ite @tmp_13
                    (let ((dist BFloat@zero))
                      (let (($__ir_ret__$2 (__i__Main..Sphere..intersect$Lifstmt_done_3 dist ray this)))
                        (let (($__ir_ret__$3 $__ir_ret__$2))
                          (let (($return $__ir_ret__$3))
                            ($Result_BTerm@success $return)
                          )
                        )
                      )
                    )
                    (let ((@tmp_17 (* v v)))
                      (let ((vfac @tmp_17))
                        (let ((@tmp_23 (Main..Sphere@_radius this)))
                          (let ((@tmp_24 (Float..square @tmp_23)))
                            (let ((@tmp_26 (Main..%dotprod%__Main..Vector__Main..Vector_ eo eo)))
                              (let ((@tmp_25 (- @tmp_26 @tmp_17)))
                                (let ((@tmp_20 (- @tmp_24 @tmp_25)))
                                  (let ((disc @tmp_20))
                                    (let ((@tmp_31 (< @tmp_20 BFloat@zero)))
                                      (ite @tmp_31
                                        (let ((@tmp_30$1 BFloat@zero))
                                          (let (($__ir_ret__$1 (__i__Main..Sphere..intersect$Lselect_done_6 @tmp_30$1 ray this)))
                                            (let (($__ir_ret__$3 $__ir_ret__$1))
                                              (let (($return $__ir_ret__$3))
                                                ($Result_BTerm@success $return)
                                              )
                                            )
                                          )
                                        )
                                        (let ((_@tmpvar@14 (Float..sqrt disc)))
                                          (ite ((_ is $Result_BFloat@error) _@tmpvar@14)
                                            ($Result_BTerm@error ($Result_BFloat@error_value _@tmpvar@14))
                                            (let ((@tmp_39 ($Result_BFloat@success_value _@tmpvar@14)))
                                              (let ((@tmp_35 (- v @tmp_39)))
                                                (let ((@tmp_30 @tmp_35))
                                                  (let (($__ir_ret__ (__i__Main..Sphere..intersect$Lselect_done_6 @tmp_30 ray this)))
                                                    (let (($__ir_ret__$3 $__ir_ret__))
                                                      (let (($return $__ir_ret__$3))
                                                        ($Result_BTerm@success $return)
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun intersect$0 ((this Main..Plane) (ray Main..Ray)) $Result_BTerm
(let ((@tmp_3 (Main..Plane@_norm this)))
    (let ((@tmp_6 (Main..Ray@_dir ray)))
      (let ((@tmp_0 (Main..%dotprod%__Main..Vector__Main..Vector_ @tmp_3 @tmp_6)))
        (let ((denom @tmp_0))
          (let ((@tmp_7 (>= @tmp_0 BFloat@zero)))
            (ite @tmp_7
              (let ((@tmp_11 BTerm@none))
                (let (($__ir_ret__$1 @tmp_11))
                  (let (($__ir_ret__$2 $__ir_ret__$1))
                    (let (($return $__ir_ret__$2))
                      ($Result_BTerm@success $return)
                    )
                  )
                )
              )
              (let ((@tmp_20 (Main..Plane@_norm this)))
                (let ((@tmp_23 (Main..Ray@_start ray)))
                  (let ((@tmp_17 (Main..%dotprod%__Main..Vector__Main..Vector_ @tmp_20 @tmp_23)))
                    (let ((@tmp_26 (Main..Plane@_offset this)))
                      (let ((@tmp_16 (+ @tmp_17 @tmp_26)))
                        (let ((@tmp_27 (- denom)))
                          (let ((_@tmpvar@15 (ite (= BFloat@zero @tmp_27) ($Result_BFloat@error ErrorID_AssumeCheck) ($Result_BFloat@success (/ @tmp_16 @tmp_27)))))
                            (ite ((_ is $Result_BFloat@error) _@tmpvar@15)
                              ($Result_BTerm@error ($Result_BFloat@error_value _@tmpvar@15))
                              (let ((@tmp_15 ($Result_BFloat@success_value _@tmpvar@15)))
                                (let ((@tmp_29 (BTerm@termbox TypeTag_Main..Plane (Main..Plane@box this))))
                                  (let ((@tmp_12 (Main..ISect@cons @tmp_29 ray @tmp_15)))
                                    (let ((@tmp_30 (BTerm@termbox TypeTag_Main..ISect (Main..ISect@box @tmp_12))))
                                      (let (($__ir_ret__ @tmp_30))
                                        (let (($__ir_ret__$2 $__ir_ret__))
                                          (let (($return $__ir_ret__$2))
                                            ($Result_BTerm@success $return)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun $VirtualInvoke_Main..SceneObject@_intersect_ ((arg BTerm) (arg_0 Main..Ray)) $Result_BTerm
(ite ((_ is Main..Sphere@box) (BTerm_termvalue arg))
    (intersect (bsqobject_Main..Sphere_value (BTerm_termvalue arg)) arg_0)
    (intersect$0 (bsqobject_Main..Plane_value (BTerm_termvalue arg)) arg_0)
  )
)

(define-fun fn--raytracer.bsq_k19..52@1902_T_Main..SceneObject_ ((thing BTerm) (ray Main..Ray)) $Result_BTerm
(let ((_@tmpvar@16 ($VirtualInvoke_Main..SceneObject@_intersect_ thing ray)))
    (ite ((_ is $Result_BTerm@error) _@tmpvar@16)
      _@tmpvar@16
      (let ((@tmp_2 ($Result_BTerm@success_value _@tmpvar@16)))
        (let (($__ir_ret__ @tmp_2))
          (let (($return $__ir_ret__))
            ($Result_BTerm@success $return)
          )
        )
      )
    )
  )
)

(define-fun SeqListOps..s_list_pop_front_T_Main..SceneObject_ ((l SeqList_Main..SceneObject_)) SeqList_Main..SceneObject_
(SeqList_Main..SceneObject_@cons (seq.extract (SeqList_Main..SceneObject__seq l) 1 (- (seq.len (SeqList_Main..SceneObject__seq l)) 1)))
)

(define-fun SeqListOps..s_list_size_T_Main..SceneObject_ ((l SeqList_Main..SceneObject_)) BNat
(seq.len (SeqList_Main..SceneObject__seq l))
)

(define-fun SeqListOps..s_list_get_T_Main..SceneObject_ ((l SeqList_Main..SceneObject_) (i BNat)) BTerm
(seq.nth (SeqList_Main..SceneObject__seq l) i)
)

(define-fun ListOps..s_seqlist_to_vector_or_none_T_Main..SceneObject_ ((l SeqList_Main..SceneObject_) (len BNat)) BTerm
(let ((@tmp_0 (= len 0)))
    (ite @tmp_0
      (let ((@tmp_4 BTerm@none))
        (let (($__ir_ret__$4 @tmp_4))
          (let (($__ir_ret__$5 $__ir_ret__$4))
            (let (($return $__ir_ret__$5))
              $return
            )
          )
        )
      )
      (let ((@tmp_5 (= len 1)))
        (ite @tmp_5
          (let ((@tmp_9 (SeqListOps..s_list_get_T_Main..SceneObject_ l 0)))
            (let ((@tmp_8 (Vector1_Main..SceneObject_@cons @tmp_9)))
              (let ((@tmp_12 (BTerm@termbox TypeTag_Vector1_Main..SceneObject_ (Vector1_Main..SceneObject_@box @tmp_8))))
                (let (($__ir_ret__$3 @tmp_12))
                  (let (($__ir_ret__$5 $__ir_ret__$3))
                    (let (($return $__ir_ret__$5))
                      $return
                    )
                  )
                )
              )
            )
          )
          (let ((@tmp_13 (= len 2)))
            (ite @tmp_13
              (let ((@tmp_17 (SeqListOps..s_list_get_T_Main..SceneObject_ l 0)))
                (let ((@tmp_20 (SeqListOps..s_list_get_T_Main..SceneObject_ l 1)))
                  (let ((@tmp_16 (Vector2_Main..SceneObject_@cons @tmp_17 @tmp_20)))
                    (let ((@tmp_23 (BTerm@termbox TypeTag_Vector2_Main..SceneObject_ (Vector2_Main..SceneObject_@box @tmp_16))))
                      (let (($__ir_ret__$2 @tmp_23))
                        (let (($__ir_ret__$5 $__ir_ret__$2))
                          (let (($return $__ir_ret__$5))
                            $return
                          )
                        )
                      )
                    )
                  )
                )
              )
              (let ((@tmp_24 (= len 3)))
                (ite @tmp_24
                  (let ((@tmp_28 (SeqListOps..s_list_get_T_Main..SceneObject_ l 0)))
                    (let ((@tmp_31 (SeqListOps..s_list_get_T_Main..SceneObject_ l 1)))
                      (let ((@tmp_34 (SeqListOps..s_list_get_T_Main..SceneObject_ l 2)))
                        (let ((@tmp_27 (Vector3_Main..SceneObject_@cons @tmp_28 @tmp_31 @tmp_34)))
                          (let ((@tmp_37 (BTerm@termbox TypeTag_Vector3_Main..SceneObject_ (Vector3_Main..SceneObject_@box @tmp_27))))
                            (let (($__ir_ret__$1 @tmp_37))
                              (let (($__ir_ret__$5 $__ir_ret__$1))
                                (let (($return $__ir_ret__$5))
                                  $return
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  (let ((@tmp_39 (SeqListOps..s_list_get_T_Main..SceneObject_ l 0)))
                    (let ((@tmp_42 (SeqListOps..s_list_get_T_Main..SceneObject_ l 1)))
                      (let ((@tmp_45 (SeqListOps..s_list_get_T_Main..SceneObject_ l 2)))
                        (let ((@tmp_48 (SeqListOps..s_list_get_T_Main..SceneObject_ l 3)))
                          (let ((@tmp_38 (Vector4_Main..SceneObject_@cons @tmp_39 @tmp_42 @tmp_45 @tmp_48)))
                            (let ((@tmp_51 (BTerm@termbox TypeTag_Vector4_Main..SceneObject_ (Vector4_Main..SceneObject_@box @tmp_38))))
                              (let (($__ir_ret__ @tmp_51))
                                (let (($__ir_ret__$5 $__ir_ret__))
                                  (let (($return $__ir_ret__$5))
                                    $return
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun ListOps..s_ensure_std_repr_T_Main..SceneObject_ ((l BTerm)) BTerm
(let ((@tmp_2 ((_ is SeqList_Main..SceneObject_@box) (BTerm_termvalue l))))
    (ite @tmp_2
      (let ((@tmp_5 (bsqobject_SeqList_Main..SceneObject__value (BTerm_termvalue l))))
        (let ((@tmp_3 (SeqListOps..s_list_size_T_Main..SceneObject_ @tmp_5)))
          (let ((count @tmp_3))
            (let ((@tmp_6 (> @tmp_3 4)))
              (ite @tmp_6
                (let (($__ir_ret__$2 l))
                  (let (($__ir_ret__$3 $__ir_ret__$2))
                    (let (($return $__ir_ret__$3))
                      $return
                    )
                  )
                )
                (let ((@tmp_13 (bsqobject_SeqList_Main..SceneObject__value (BTerm_termvalue l))))
                  (let ((@tmp_10 (ListOps..s_seqlist_to_vector_or_none_T_Main..SceneObject_ @tmp_13 count)))
                    (let ((@tmp_14 @tmp_10))
                      (let (($__ir_ret__$1 @tmp_14))
                        (let (($__ir_ret__$3 $__ir_ret__$1))
                          (let (($return $__ir_ret__$3))
                            $return
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      (let (($__ir_ret__ l))
        (let (($__ir_ret__$3 $__ir_ret__))
          (let (($return $__ir_ret__$3))
            $return
          )
        )
      )
    )
  )
)

(define-fun Vector2_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ ((l Vector2_Main..SceneObject_)) Vector1_Main..SceneObject_
(let ((@tmp_3 (Vector2_Main..SceneObject_@_v1 l)))
    (let ((@tmp_0 (Vector1_Main..SceneObject_@cons @tmp_3)))
      (let (($__ir_ret__ @tmp_0))
        (let (($return $__ir_ret__))
          $return
        )
      )
    )
  )
)

(define-fun Vector3_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ ((l Vector3_Main..SceneObject_)) Vector2_Main..SceneObject_
(let ((@tmp_3 (Vector3_Main..SceneObject_@_v1 l)))
    (let ((@tmp_6 (Vector3_Main..SceneObject_@_v2 l)))
      (let ((@tmp_0 (Vector2_Main..SceneObject_@cons @tmp_3 @tmp_6)))
        (let (($__ir_ret__ @tmp_0))
          (let (($return $__ir_ret__))
            $return
          )
        )
      )
    )
  )
)

(define-fun Vector4_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ ((l Vector4_Main..SceneObject_)) Vector3_Main..SceneObject_
(let ((@tmp_3 (Vector4_Main..SceneObject_@_v1 l)))
    (let ((@tmp_6 (Vector4_Main..SceneObject_@_v2 l)))
      (let ((@tmp_9 (Vector4_Main..SceneObject_@_v3 l)))
        (let ((@tmp_0 (Vector3_Main..SceneObject_@cons @tmp_3 @tmp_6 @tmp_9)))
          (let (($__ir_ret__ @tmp_0))
            (let (($return $__ir_ret__))
              $return
            )
          )
        )
      )
    )
  )
)

(define-fun VectorOps..s_list_pop_front_T_Main..SceneObject_ ((l BTerm)) BTerm
(let ((@tmp_2 ((_ is Vector1_Main..SceneObject_@box) (BTerm_termvalue l))))
    (ite @tmp_2
      (let ((@tmp_4 BTerm@none))
        (let (($__ir_ret__$3 @tmp_4))
          (let (($__ir_ret__$4 $__ir_ret__$3))
            (let (($return $__ir_ret__$4))
              $return
            )
          )
        )
      )
      (let ((@tmp_7 ((_ is Vector2_Main..SceneObject_@box) (BTerm_termvalue l))))
        (ite @tmp_7
          (let ((@tmp_10 (bsqobject_Vector2_Main..SceneObject__value (BTerm_termvalue l))))
            (let ((@tmp_8 (Vector2_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ @tmp_10)))
              (let ((@tmp_11 (BTerm@termbox TypeTag_Vector1_Main..SceneObject_ (Vector1_Main..SceneObject_@box @tmp_8))))
                (let (($__ir_ret__$2 @tmp_11))
                  (let (($__ir_ret__$4 $__ir_ret__$2))
                    (let (($return $__ir_ret__$4))
                      $return
                    )
                  )
                )
              )
            )
          )
          (let ((@tmp_14 ((_ is Vector3_Main..SceneObject_@box) (BTerm_termvalue l))))
            (ite @tmp_14
              (let ((@tmp_17 (bsqobject_Vector3_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((@tmp_15 (Vector3_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ @tmp_17)))
                  (let ((@tmp_18 (BTerm@termbox TypeTag_Vector2_Main..SceneObject_ (Vector2_Main..SceneObject_@box @tmp_15))))
                    (let (($__ir_ret__$1 @tmp_18))
                      (let (($__ir_ret__$4 $__ir_ret__$1))
                        (let (($return $__ir_ret__$4))
                          $return
                        )
                      )
                    )
                  )
                )
              )
              (let ((@tmp_21 (bsqobject_Vector4_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((@tmp_19 (Vector4_Main..SceneObject_..s_list_pop_front_T_Main..SceneObject_ @tmp_21)))
                  (let ((@tmp_22 (BTerm@termbox TypeTag_Vector3_Main..SceneObject_ (Vector3_Main..SceneObject_@box @tmp_19))))
                    (let (($__ir_ret__ @tmp_22))
                      (let (($__ir_ret__$4 $__ir_ret__))
                        (let (($return $__ir_ret__$4))
                          $return
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun ListOps..s_list_pop_front_T_Main..SceneObject_ ((l List_Main..SceneObject_)) List_Main..SceneObject_
(let ((@tmp_0 l))
    (let ((ll @tmp_0))
      (let ((@tmp_4 ((_ is SeqList_Main..SceneObject_@box) (BTerm_termvalue @tmp_0))))
        (ite @tmp_4
          (let ((@tmp_8 (bsqobject_SeqList_Main..SceneObject__value (BTerm_termvalue ll))))
            (let ((@tmp_6 (SeqListOps..s_list_pop_front_T_Main..SceneObject_ @tmp_8)))
              (let ((@tmp_9 (BTerm@termbox TypeTag_SeqList_Main..SceneObject_ (SeqList_Main..SceneObject_@box @tmp_6))))
                (let ((@tmp_5 (ListOps..s_ensure_std_repr_T_Main..SceneObject_ @tmp_9)))
                  (let ((res @tmp_5))
                    (let ((@tmp_10 @tmp_5))
                      (let (($__ir_ret__$1 @tmp_10))
                        (let (($__ir_ret__$2 $__ir_ret__$1))
                          (let (($return $__ir_ret__$2))
                            $return
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
          (let ((@tmp_16 ll))
            (let ((@tmp_13 (VectorOps..s_list_pop_front_T_Main..SceneObject_ @tmp_16)))
              (let ((@tmp_17 @tmp_13))
                (let ((@tmp_12 @tmp_17))
                  (let (($__ir_ret__ @tmp_12))
                    (let (($__ir_ret__$2 $__ir_ret__))
                      (let (($return $__ir_ret__$2))
                        $return
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun pred--raytracer.bsq_k19..53@1951_T_Main..SceneObject_ ((a Main..ISect) (b Main..ISect)) Bool
(let ((@tmp_3 (Main..ISect@_dist a)))
    (let ((@tmp_6 (Main..ISect@_dist b)))
      (let ((@tmp_0 (< @tmp_3 @tmp_6)))
        (let (($__ir_ret__ @tmp_0))
          (let (($return $__ir_ret__))
            $return
          )
        )
      )
    )
  )
)

(define-fun fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ ((acc BTerm) (v BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((_@tmpvar@17 (fn--raytracer.bsq_k19..52@1902_T_Main..SceneObject_ v @@c_0_ray)))
    (ite ((_ is $Result_BTerm@error) _@tmpvar@17)
      _@tmpvar@17
      (let ((@tmp_0 ($Result_BTerm@success_value _@tmpvar@17)))
        (let ((vv @tmp_0))
          (let ((@tmp_2 (= acc BTerm@none)))
            (ite @tmp_2
              (let (($__ir_ret__$3 vv))
                (let (($__ir_ret__$4 $__ir_ret__$3))
                  (let (($return $__ir_ret__$4))
                    ($Result_BTerm@success $return)
                  )
                )
              )
              (let ((@tmp_6 (= vv BTerm@none)))
                (ite @tmp_6
                  (let (($__ir_ret__$2 acc))
                    (let (($__ir_ret__$4 $__ir_ret__$2))
                      (let (($return $__ir_ret__$4))
                        ($Result_BTerm@success $return)
                      )
                    )
                  )
                  (let ((@tmp_13 (bsqobject_Main..ISect_value (BTerm_termvalue vv))))
                    (let ((@tmp_14 (bsqobject_Main..ISect_value (BTerm_termvalue acc))))
                      (let ((@tmp_10 (pred--raytracer.bsq_k19..53@1951_T_Main..SceneObject_ @tmp_13 @tmp_14)))
                        (ite @tmp_10
                          (let (($__ir_ret__$1 vv))
                            (let (($__ir_ret__$4 $__ir_ret__$1))
                              (let (($return $__ir_ret__$4))
                                ($Result_BTerm@success $return)
                              )
                            )
                          )
                          (let (($__ir_ret__ acc))
                            (let (($__ir_ret__$4 $__ir_ret__))
                              (let (($return $__ir_ret__$4))
                                ($Result_BTerm@success $return)
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun SeqListOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l SeqList_Main..SceneObject_) (init BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(seq.foldl (lambda ((@@acc $Result_BTerm) (@@x BTerm)) (ite ((_ is $Result_BTerm@error) @@acc) @@acc (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ ($Result_BTerm@success_value @@acc) @@x @@c_0_ray))) ($Result_BTerm@success init) (SeqList_Main..SceneObject__seq l))
)

(define-fun Vector1_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l Vector1_Main..SceneObject_) (iv BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_4 (Vector1_Main..SceneObject_@_v0 l)))
    (let ((_@tmpvar@18 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ iv @tmp_4 @@c_0_ray)))
      (ite ((_ is $Result_BTerm@error) _@tmpvar@18)
        _@tmpvar@18
        (let ((@tmp_0 ($Result_BTerm@success_value _@tmpvar@18)))
          (let (($__ir_ret__ @tmp_0))
            (let (($return $__ir_ret__))
              ($Result_BTerm@success $return)
            )
          )
        )
      )
    )
  )
)

(define-fun Vector2_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l Vector2_Main..SceneObject_) (iv BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_4 (Vector2_Main..SceneObject_@_v0 l)))
    (let ((_@tmpvar@20 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ iv @tmp_4 @@c_0_ray)))
      (ite ((_ is $Result_BTerm@error) _@tmpvar@20)
        _@tmpvar@20
        (let ((@tmp_0 ($Result_BTerm@success_value _@tmpvar@20)))
          (let ((v1 @tmp_0))
            (let ((@tmp_9 (Vector2_Main..SceneObject_@_v1 l)))
              (let ((_@tmpvar@19 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_0 @tmp_9 @@c_0_ray)))
                (ite ((_ is $Result_BTerm@error) _@tmpvar@19)
                  _@tmpvar@19
                  (let ((@tmp_5 ($Result_BTerm@success_value _@tmpvar@19)))
                    (let (($__ir_ret__ @tmp_5))
                      (let (($return $__ir_ret__))
                        ($Result_BTerm@success $return)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Vector3_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l Vector3_Main..SceneObject_) (iv BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_4 (Vector3_Main..SceneObject_@_v0 l)))
    (let ((_@tmpvar@23 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ iv @tmp_4 @@c_0_ray)))
      (ite ((_ is $Result_BTerm@error) _@tmpvar@23)
        _@tmpvar@23
        (let ((@tmp_0 ($Result_BTerm@success_value _@tmpvar@23)))
          (let ((v1 @tmp_0))
            (let ((@tmp_9 (Vector3_Main..SceneObject_@_v1 l)))
              (let ((_@tmpvar@22 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_0 @tmp_9 @@c_0_ray)))
                (ite ((_ is $Result_BTerm@error) _@tmpvar@22)
                  _@tmpvar@22
                  (let ((@tmp_5 ($Result_BTerm@success_value _@tmpvar@22)))
                    (let ((v2 @tmp_5))
                      (let ((@tmp_14 (Vector3_Main..SceneObject_@_v2 l)))
                        (let ((_@tmpvar@21 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_5 @tmp_14 @@c_0_ray)))
                          (ite ((_ is $Result_BTerm@error) _@tmpvar@21)
                            _@tmpvar@21
                            (let ((@tmp_10 ($Result_BTerm@success_value _@tmpvar@21)))
                              (let (($__ir_ret__ @tmp_10))
                                (let (($return $__ir_ret__))
                                  ($Result_BTerm@success $return)
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Vector4_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l Vector4_Main..SceneObject_) (iv BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_4 (Vector4_Main..SceneObject_@_v0 l)))
    (let ((_@tmpvar@27 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ iv @tmp_4 @@c_0_ray)))
      (ite ((_ is $Result_BTerm@error) _@tmpvar@27)
        _@tmpvar@27
        (let ((@tmp_0 ($Result_BTerm@success_value _@tmpvar@27)))
          (let ((v1 @tmp_0))
            (let ((@tmp_9 (Vector4_Main..SceneObject_@_v1 l)))
              (let ((_@tmpvar@26 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_0 @tmp_9 @@c_0_ray)))
                (ite ((_ is $Result_BTerm@error) _@tmpvar@26)
                  _@tmpvar@26
                  (let ((@tmp_5 ($Result_BTerm@success_value _@tmpvar@26)))
                    (let ((v2 @tmp_5))
                      (let ((@tmp_14 (Vector4_Main..SceneObject_@_v2 l)))
                        (let ((_@tmpvar@25 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_5 @tmp_14 @@c_0_ray)))
                          (ite ((_ is $Result_BTerm@error) _@tmpvar@25)
                            _@tmpvar@25
                            (let ((@tmp_10 ($Result_BTerm@success_value _@tmpvar@25)))
                              (let ((v3 @tmp_10))
                                (let ((@tmp_19 (Vector4_Main..SceneObject_@_v3 l)))
                                  (let ((_@tmpvar@24 (fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902_ @tmp_10 @tmp_19 @@c_0_ray)))
                                    (ite ((_ is $Result_BTerm@error) _@tmpvar@24)
                                      _@tmpvar@24
                                      (let ((@tmp_15 ($Result_BTerm@success_value _@tmpvar@24)))
                                        (let (($__ir_ret__ @tmp_15))
                                          (let (($return $__ir_ret__))
                                            ($Result_BTerm@success $return)
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun VectorOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l BTerm) (iv BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_2 ((_ is Vector1_Main..SceneObject_@box) (BTerm_termvalue l))))
    (ite @tmp_2
      (let ((@tmp_7 (bsqobject_Vector1_Main..SceneObject__value (BTerm_termvalue l))))
        (let ((_@tmpvar@28 (Vector1_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_7 iv @@c_0_ray)))
          (ite ((_ is $Result_BTerm@error) _@tmpvar@28)
            _@tmpvar@28
            (let ((@tmp_3 ($Result_BTerm@success_value _@tmpvar@28)))
              (let (($__ir_ret__$3 @tmp_3))
                (let (($__ir_ret__$4 $__ir_ret__$3))
                  (let (($return $__ir_ret__$4))
                    ($Result_BTerm@success $return)
                  )
                )
              )
            )
          )
        )
      )
      (let ((@tmp_10 ((_ is Vector2_Main..SceneObject_@box) (BTerm_termvalue l))))
        (ite @tmp_10
          (let ((@tmp_15 (bsqobject_Vector2_Main..SceneObject__value (BTerm_termvalue l))))
            (let ((_@tmpvar@29 (Vector2_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_15 iv @@c_0_ray)))
              (ite ((_ is $Result_BTerm@error) _@tmpvar@29)
                _@tmpvar@29
                (let ((@tmp_11 ($Result_BTerm@success_value _@tmpvar@29)))
                  (let (($__ir_ret__$2 @tmp_11))
                    (let (($__ir_ret__$4 $__ir_ret__$2))
                      (let (($return $__ir_ret__$4))
                        ($Result_BTerm@success $return)
                      )
                    )
                  )
                )
              )
            )
          )
          (let ((@tmp_18 ((_ is Vector3_Main..SceneObject_@box) (BTerm_termvalue l))))
            (ite @tmp_18
              (let ((@tmp_23 (bsqobject_Vector3_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((_@tmpvar@30 (Vector3_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_23 iv @@c_0_ray)))
                  (ite ((_ is $Result_BTerm@error) _@tmpvar@30)
                    _@tmpvar@30
                    (let ((@tmp_19 ($Result_BTerm@success_value _@tmpvar@30)))
                      (let (($__ir_ret__$1 @tmp_19))
                        (let (($__ir_ret__$4 $__ir_ret__$1))
                          (let (($return $__ir_ret__$4))
                            ($Result_BTerm@success $return)
                          )
                        )
                      )
                    )
                  )
                )
              )
              (let ((@tmp_28 (bsqobject_Vector4_Main..SceneObject__value (BTerm_termvalue l))))
                (let ((_@tmpvar@31 (Vector4_Main..SceneObject_..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_28 iv @@c_0_ray)))
                  (ite ((_ is $Result_BTerm@error) _@tmpvar@31)
                    _@tmpvar@31
                    (let ((@tmp_24 ($Result_BTerm@success_value _@tmpvar@31)))
                      (let (($__ir_ret__ @tmp_24))
                        (let (($__ir_ret__$4 $__ir_ret__))
                          (let (($return $__ir_ret__$4))
                            ($Result_BTerm@success $return)
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun ListOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ ((l List_Main..SceneObject_) (init BTerm) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_0 l))
    (let ((ll @tmp_0))
      (let ((@tmp_4 ((_ is SeqList_Main..SceneObject_@box) (BTerm_termvalue @tmp_0))))
        (ite @tmp_4
          (let ((@tmp_9 (bsqobject_SeqList_Main..SceneObject__value (BTerm_termvalue ll))))
            (let ((_@tmpvar@32 (SeqListOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_9 init @@c_0_ray)))
              (ite ((_ is $Result_BTerm@error) _@tmpvar@32)
                _@tmpvar@32
                (let ((@tmp_5 ($Result_BTerm@success_value _@tmpvar@32)))
                  (let (($__ir_ret__$1 @tmp_5))
                    (let (($__ir_ret__$2 $__ir_ret__$1))
                      (let (($return $__ir_ret__$2))
                        ($Result_BTerm@success $return)
                      )
                    )
                  )
                )
              )
            )
          )
          (let ((@tmp_13 ll))
            (let ((_@tmpvar@33 (VectorOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ @tmp_13 init @@c_0_ray)))
              (ite ((_ is $Result_BTerm@error) _@tmpvar@33)
                _@tmpvar@33
                (let ((@tmp_10 ($Result_BTerm@success_value _@tmpvar@33)))
                  (let (($__ir_ret__ @tmp_10))
                    (let (($__ir_ret__$2 $__ir_ret__))
                      (let (($return $__ir_ret__$2))
                        ($Result_BTerm@success $return)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun List_Main..SceneObject_..argMinOrNoneOf_T_Main..SceneObject__U_Main..ISect__fn--raytracer.bsq_k19..52@1902_T_Main..SceneObject__pred--raytracer.bsq_k19..53@1951_T_Main..SceneObject__ ((this List_Main..SceneObject_) (@@c_0_ray Main..Ray)) $Result_BTerm
(let ((@tmp_0 (ListOps..s_list_empty_T_Main..SceneObject_ this)))
    (ite @tmp_0
      (let ((@tmp_3 BTerm@none))
        (let (($__ir_ret__$2 @tmp_3))
          (let (($__ir_ret__$3 $__ir_ret__$2))
            (let (($return $__ir_ret__$3))
              ($Result_BTerm@success $return)
            )
          )
        )
      )
      (let ((@tmp_5 (ListOps..s_list_front_T_Main..SceneObject_ this)))
        (let ((_@tmpvar@35 (fn--raytracer.bsq_k19..52@1902_T_Main..SceneObject_ @tmp_5 @@c_0_ray)))
          (ite ((_ is $Result_BTerm@error) _@tmpvar@35)
            _@tmpvar@35
            (let ((@tmp_4 ($Result_BTerm@success_value _@tmpvar@35)))
              (let ((iv @tmp_4))
                (let ((@tmp_7 (ListOps..s_list_pop_front_T_Main..SceneObject_ this)))
                  (let ((tl @tmp_7))
                    (let ((@tmp_9 (ListOps..s_list_empty_T_Main..SceneObject_ @tmp_7)))
                      (ite @tmp_9
                        (let (($__ir_ret__$1 iv))
                          (let (($__ir_ret__$3 $__ir_ret__$1))
                            (let (($return $__ir_ret__$3))
                              ($Result_BTerm@success $return)
                            )
                          )
                        )
                        (let ((_@tmpvar@34 (ListOps..s_list_reduce_T_Main..SceneObject__U_Main..ISect___None__fn--list.bsq_k1..929@27276_T_Main..SceneObject__U_Main..ISect__cmp_raytracer.bsq_k19..53@1951_f_raytracer.bsq_k19..52@1902__ tl iv @@c_0_ray)))
                          (ite ((_ is $Result_BTerm@error) _@tmpvar@34)
                            _@tmpvar@34
                            (let ((@tmp_12 ($Result_BTerm@success_value _@tmpvar@34)))
                              (let (($__ir_ret__ @tmp_12))
                                (let (($__ir_ret__$3 $__ir_ret__))
                                  (let (($return $__ir_ret__$3))
                                    ($Result_BTerm@success $return)
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..minIntersection ((this Main..RayTracer) (ray Main..Ray) (scene Main..Scene)) $Result_BTerm
(let ((@tmp_2 (Main..Scene@_things scene)))
    (let ((_@tmpvar@36 (List_Main..SceneObject_..argMinOrNoneOf_T_Main..SceneObject__U_Main..ISect__fn--raytracer.bsq_k19..52@1902_T_Main..SceneObject__pred--raytracer.bsq_k19..53@1951_T_Main..SceneObject__ @tmp_2 ray)))
      (ite ((_ is $Result_BTerm@error) _@tmpvar@36)
        _@tmpvar@36
        (let ((@tmp_3 ($Result_BTerm@success_value _@tmpvar@36)))
          (let ((imin @tmp_3))
            (let (($__ir_ret__ @tmp_3))
              (let (($return $__ir_ret__))
                ($Result_BTerm@success $return)
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..shade ((this Main..RayTracer) (isect Main..ISect) (scene Main..Scene) (depth BNat)) Main..Color
(let ((@tmp_0 (Main..Color@cons 0.5 0.5 0.5)))
    (let (($__ir_ret__ @tmp_0))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun Main..RayTracer..traceRay ((this Main..RayTracer) (ray Main..Ray) (scene Main..Scene) (depth BNat)) $Result_Main..Color
(let ((_@tmpvar@37 (Main..RayTracer..minIntersection this ray scene)))
    (ite ((_ is $Result_BTerm@error) _@tmpvar@37)
      ($Result_Main..Color@error ($Result_BTerm@error_value _@tmpvar@37))
      (let ((@tmp_2 ($Result_BTerm@success_value _@tmpvar@37)))
        (let ((isect @tmp_2))
          (let ((@tmp_5 (= @tmp_2 BTerm@none)))
            (ite @tmp_5
              (let (($__ir_ret__$1 Main..Color..background))
                (let (($__ir_ret__$2 $__ir_ret__$1))
                  (let (($return $__ir_ret__$2))
                    ($Result_Main..Color@success $return)
                  )
                )
              )
              (let ((@tmp_15 (bsqobject_Main..ISect_value (BTerm_termvalue isect))))
                (let ((@tmp_11 (Main..RayTracer..shade this @tmp_15 scene depth)))
                  (let (($__ir_ret__ @tmp_11))
                    (let (($__ir_ret__$2 $__ir_ret__))
                      (let (($return $__ir_ret__$2))
                        ($Result_Main..Color@success $return)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..RayTracer..renderPixel ((this Main..RayTracer) (scene Main..Scene) (x BNat) (y BNat)) $Result_Main..Color
(let ((@tmp_6 (Main..Scene@_camera scene)))
    (let ((@tmp_7 (Main..Camera@_pos @tmp_6)))
      (let ((@tmp_13 (Nat..toFloat x)))
        (let ((@tmp_16 (Nat..toFloat y)))
          (let ((@tmp_19 (Main..Scene@_camera scene)))
            (let ((_@tmpvar@39 (Main..RayTracer..getPoint this @tmp_13 @tmp_16 @tmp_19)))
              (ite ((_ is $Result_Main..Vector@error) _@tmpvar@39)
                ($Result_Main..Color@error ($Result_Main..Vector@error_value _@tmpvar@39))
                (let ((@tmp_10 ($Result_Main..Vector@success_value _@tmpvar@39)))
                  (let ((@tmp_3 (Main..Ray@cons @tmp_7 @tmp_10)))
                    (let ((_@tmpvar@38 (Main..RayTracer..traceRay this @tmp_3 scene 0)))
                      (ite ((_ is $Result_Main..Color@error) _@tmpvar@38)
                        _@tmpvar@38
                        (let ((@tmp_2 ($Result_Main..Color@success_value _@tmpvar@38)))
                          (let (($__ir_ret__ @tmp_2))
                            (let (($return $__ir_ret__))
                              ($Result_Main..Color@success $return)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun Main..main () $Result_Bool
(let ((@tmp_0 (Main..RayTracer@cons 8 8)))
    (let ((tracer @tmp_0))
      (let ((_@tmpvar@41 Main..RayTracer..createDefaultScene))
        (ite ((_ is $Result_Main..Scene@error) _@tmpvar@41)
          ($Result_Bool@error ($Result_Main..Scene@error_value _@tmpvar@41))
          (let ((@tmp_3 ($Result_Main..Scene@success_value _@tmpvar@41)))
            (let ((scene @tmp_3))
              (let ((_@tmpvar@40 (Main..RayTracer..renderPixel @tmp_0 @tmp_3 4 3)))
                (ite ((_ is $Result_Main..Color@error) _@tmpvar@40)
                  ($Result_Bool@error ($Result_Main..Color@error_value _@tmpvar@40))
                  (let ((@tmp_6 ($Result_Main..Color@success_value _@tmpvar@40)))
                    (let ((clr @tmp_6))
                      (let (($__ir_ret__ true))
                        (let (($return $__ir_ret__))
                          ($Result_Bool@success $return)
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

(define-fun constexp_color.bsq_k18_constexp..14@522..background () Main..Color
(let ((@tmp_0 (Main..Color@cons BFloat@zero BFloat@zero BFloat@zero)))
    (let (($__ir_ret__ @tmp_0))
      (let (($return $__ir_ret__))
        $return
      )
    )
  )
)

(define-fun constexp_scene.bsq_k20_constexp..13@553..checkerBoard () Main..Surface
(let ((@tmp_1 (Main..Color@cons 0.02 BFloat@zero 0.14)))
    (let ((@tmp_5 (Main..Color@cons BFloat@one BFloat@one BFloat@one)))
      (let ((@tmp_0 (Main..Surface@cons @tmp_1 @tmp_5 0.5 150.0)))
        (let (($__ir_ret__ @tmp_0))
          (let (($return $__ir_ret__))
            $return
          )
        )
      )
    )
  )
)

(define-fun constexp_scene.bsq_k20_constexp..15@760..matteShiny () Main..Surface
(let ((@tmp_1 (Main..Color@cons BFloat@one BFloat@one BFloat@one)))
    (let ((@tmp_5 (Main..Color@cons 0.25 0.25 0.25)))
      (let ((@tmp_0 (Main..Surface@cons @tmp_1 @tmp_5 0.7 250.0)))
        (let (($__ir_ret__ @tmp_0))
          (let (($return $__ir_ret__))
            $return
          )
        )
      )
    )
  )
)

(define-fun constexp_scene.bsq_k20_constexp..14@655..shiny () Main..Surface
(let ((@tmp_1 (Main..Color@cons BFloat@one BFloat@one BFloat@one)))
    (let ((@tmp_5 (Main..Color@cons 0.5 0.5 0.5)))
      (let ((@tmp_0 (Main..Surface@cons @tmp_1 @tmp_5 0.7 250.0)))
        (let (($__ir_ret__ @tmp_0))
          (let (($return $__ir_ret__))
            $return
          )
        )
      )
    )
  )
)

(assert (= Main..Color..background constexp_color.bsq_k18_constexp..14@522..background))
(assert (= Main..Scene..checkerBoard constexp_scene.bsq_k20_constexp..13@553..checkerBoard))
(assert (= Main..Scene..matteShiny constexp_scene.bsq_k20_constexp..15@760..matteShiny))
(assert (= Main..Scene..shiny constexp_scene.bsq_k20_constexp..14@655..shiny))

(declare-const _@smtres@ $Result_Bool)
(assert (= _@smtres@ Main..main))
(assert ((_ is $Result_Bool@success) _@smtres@))
(assert (not ($Result_Bool@success_value _@smtres@)))
