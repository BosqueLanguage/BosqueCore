namespace Main;

concept Bar {
    field g: Int;
}
concept Named {
    field name: String;
}

entity Qux provides Named, Bar {
    field h: Int;
}
entity Qaz provides Named, Bar {
    field h: Int;
}

function select(b: Bool): Qux | Qaz | None {
    if(b) {
        return Qux{"bob", 1i, 2i};
    }
    else {
        return none;
    }
}

export function main(b: Bool): [Bool, Bool, Bool, Bool, Bool] {
    let y = select(b);
    
    return [
        y?<Qux | Qaz>, 
        y?<None>, 
        y?none, 
        y?!none, 
        y?some
    ];
}
