namespace Core;

#if STRIPPED_CORE
#else
#if EXEC_LIBS
%% Eventually we will need to add functions here for manipulating our ropes
namespace UnicodeCharBufferOps {
    function s_create_empty(): UnicodeCharBuffer = unicodecharbuffer_create_empty;
    function s_create_1(c1: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_1;
    function s_create_2(c1: UnicodeChar, c2: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_2;
    function s_create_3(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_3;
    function s_create_4(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar, c4: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_4;
    function s_create_5(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar, c4: UnicodeChar, c5: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_5;
    function s_create_6(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar, c4: UnicodeChar, c5: UnicodeChar, c6: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_6;
    function s_create_7(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar, c4: UnicodeChar, c5: UnicodeChar, c6: UnicodeChar, c7: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_7;
    function s_create_8(c1: UnicodeChar, c2: UnicodeChar, c3: UnicodeChar, c4: UnicodeChar, c5: UnicodeChar, c6: UnicodeChar, c7: UnicodeChar, c8: UnicodeChar): UnicodeCharBuffer = unicodecharbuffer_create_8;
}

namespace StringOps {
    function s_fromCString(s: CString): String = string_from_cstring;
    function s_fromCChar(s: CChar): String = string_from_cchar;
    function s_fromUnicodeChar(s: UnicodeChar): String = string_from_unicodechar;

    function s_empty(s: String): Bool = string_empty;

    function s_startsWithString(s: String, prefix: String): Bool = string_starts_with_string;
    function s_endsWithString(s: String, suffix: String): Bool = string_ends_with_string;

    function s_containsString(s: String, target: String): Bool = string_contains_string;
    function s_containsStringUnique(s: String, target: String): Bool = string_contains_string_unique;

    function s_concat2(s1: String, s2: String): String = string_concat2;

    function s_removePrefixString(s: String, prefix: String): String = string_remove_prefix_string;
    function s_removeSuffixString(s: String, suffix: String): String = string_remove_suffix_string;

    function s_replaceUniqueStringOccurrence(s: String, target: String, replacement: String): String = string_replace_unique_string_occurrence;
    function s_replaceAllStringOccurrences(s: String, target: String, replacement: String): String = string_replace_all_string_occurrences;
}

__internal entity UnicodeCharBuffer {
    %% Actual buffer is represented in cpp
    %% Will probably need to store size field
}
#else
#endif %% EXEC_LIBS
#endif %% STRIPPED_CORE