%*
 * Take a Bosque IR Assembly and transform it into a SMT representation:
 *%

declare namespace SMTEmitter {
    using BSQAssembly;
    using SMTAssembly;
}

entity Transformer {
    function transformAssembly(assembly: BSQAssembly::Assembly): SMTAssembly::Assembly {
        let explicitAssembly = BSQAssembly::ExplicitifyTransform::process(assembly);

        %%TODO compute errinvokes info
        let errinvokes: Map<BSQAssembly::InvokeKey, Bool> = Map<BSQAssembly::InvokeKey, Bool>{ 
            'Main::main'<BSQAssembly::InvokeKey> => false
        };

        return SMTTransformer::transformAssemblyToSMT(explicitAssembly, errinvokes);
    }
}

public function main(assembly: BSQAssembly::Assembly): CString {
    let tasm = Transformer::transformAssembly(assembly);
    let smtstr = SMTEmitter::emitAssembly(tasm, SMTEmitter::s_ignoreErrTrgt);

    return smtstr;
}
