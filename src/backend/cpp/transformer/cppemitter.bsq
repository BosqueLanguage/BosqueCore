namespace CPPEmitter;

%%
%% Now lets build up the asm entity we weould like to use to emit from at the end of this process
%% For now we can just have methods that will directly concat into our assembly entity the necessary
%% cpp function call we would expect to need during emission.
%%

function emitIncludes(): CString {
    return '#include "cppruntime.hpp"\\n';
}

namespace PathStack {
    function emitPathStackCreate(): CString {
        return 'PathStack ps = {0, 0};';
    }

    function emitPathStackLeft(): CString {
        return 'ps.left();\\n';
    }

    function emitPathStackRight(): CString {
        return 'ps.right();\\n';
    }

    function emitPathStackUp(): CString {
        return 'ps.up();\\n';
    }
}

function emitAssembly(asm: CPPAssembly): CString {
    return CString::concat(asm.includes, asm.body);
}