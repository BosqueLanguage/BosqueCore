declare namespace CPPAssembly;

%% Most map well from Bosque/SMT emit

entity SourceInfo {
    field line: Nat;
    field column: Nat;
}

const namespaceComponentRE: CRegex = /[A-Z][_a-zA-Z0-9]+/c;
const namespaceKeyRE: CRegex = /(${CPPAssembly::namespaceComponentRE}'::')*${CPPAssembly::namespaceComponentRE}/c;
type NamespaceComponentKey = CString of CPPAssembly::namespaceComponentRE;
type NamespaceKey = CString of CPPAssembly::namespaceKeyRE; %%Core is implicit here

const basicNominalTypeKeyRE: CRegex = /(${CPPAssembly::namespaceKeyRE}'::')?[A-Z][_a-zA-Z0-9]+('<'.+'>')?/c;
const nominalTypeKeyRE: CRegex = /(${CPPAssembly::basicNominalTypeKeyRE})/c; %% Will need to handle special scoped type key?

const typeKeyRE: CRegex = /${CPPAssembly::nominalTypeKeyRE}/c;
type TypeKey = CString of CPPAssembly::typeKeyRE;

const invokeKeyRE: CRegex = /(${CPPAssembly::namespaceKeyRE}|${BSQAssembly::nominalTypeKeyRE})'::'[_a-z][_a-zA-Z0-9$]+/c;
type InvokeKey = CString of CPPAssembly::invokeKeyRE;

entity NamespaceFunctionDecl {
    field ns: NamespaceKey;
    field name: CString;
    field invokeKey: InvokeKey;

    %% Will be List<InvokeParameterDecl>
    field params: None;

    %% Will be ResultType
    field resultType: None;

    field body: Body;
}

%% Will need expanding
entity Assembly {
    field nsfuncs: List<NamespaceFunctionDecl>;
}