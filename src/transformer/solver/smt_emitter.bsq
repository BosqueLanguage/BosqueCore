namespace SMTEmit;

import TreeIR;

typedef SMTParams = {
    type_tag_decls: String,
    type_tag_distincts: String,
    key_type_tag_sort: String,
    type_tag_subtype: String,
    oo_decls: String,
    oo_constructors: String,
    type_box_constructors: String,
    global_decls: String,
    uf_decls: String,
    function_decls: String,
    global_definitions: String
};

export function main(asm: TreeIR::Assembly): SMTParams {
    let flatasm = AssemblyEmitter::processAssembly(asm); //TODO should go into tree rewriter

    let type_tag_info = AssemblyEmitter::generateTypeTagInfo(flatasm);
    let type_decl_info = AssemblyEmitter::generateTypeDecls(flatasm);
    let function_decl_info = AssemblyEmitter::generateSMTCode(flatasm, Map<TreeIR::InvokeKey, TreeIR::ErrorKind>{});

    return {
        type_tag_decls = type_tag_info.type_tag_decls,
        type_tag_distincts = type_tag_info.type_tag_distincts,
        key_type_tag_sort = type_tag_info.key_type_tag_sort,
        type_tag_subtype = type_tag_info.type_tag_subtype,
        oo_decls = type_decl_info.oo_decls,
        oo_constructors = type_decl_info.oo_constructors,
        type_box_constructors = "[NOT IMPLEMENTED]",
        global_decls = "[NOT IMPLEMENTED]",
        uf_decls = "[NOT IMPLEMENTED]",
        function_decls = function_decl_info,
        global_definitions = "[NOT IMPLEMENTED]"
    };
}
